'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

const index = require('./index-4b22c494.js');
const ModusIconMap = require('./ModusIconMap-15cda955.js');
require('./IconChevronLeft-73eb7912.js');
require('./IconChevronRight-b10cf11e.js');
require('./IconClose-0ec76e91.js');
require('./IconVisibilityOn-9f1886ed.js');

const modusMessageCss = "@import url(\"https://fonts.googleapis.com/css?family=Open+Sans:300,400,600,700\");.modus-message{align-items:center;border-radius:0.25rem;display:flex;font-family:\"Open Sans\", -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, \"Helvetica Neue\", Arial, \"Noto Sans\", sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\", \"Noto Color Emoji\";font-size:0.875rem;padding:0.5rem}.modus-message .icon{align-items:center;display:flex;margin-right:0.5rem}.modus-message.info{background-color:var(--modus-message-info-bg, #dcedf9);color:var(--modus-message-info-color, #0063a3)}.modus-message.info svg path{fill:var(--modus-message-info-color, #0063a3) !important}.modus-message.question{background-color:var(--modus-message-question-bg, #f1f1f6);color:var(--modus-message-question-color, #6a6e79)}.modus-message.question svg path{fill:var(--modus-message-question-color, #6a6e79) !important}@media (forced-colors: active){.modus-message{border:1px solid transparent}}";
const ModusMessageStyle0 = modusMessageCss;

const ModusMessage = class {
    constructor(hostRef) {
        index.registerInstance(this, hostRef);
        this.classByType = new Map([
            ['info', 'info'],
            ['question', 'question'],
        ]);
        this.ariaLabel = undefined;
        this.icon = undefined;
        this.type = 'info';
    }
    render() {
        const className = `modus-message ${this.classByType.get(this.type)}`;
        return (index.h("div", { key: 'dd6016df199cc6bdec85e3ed234ecf6caac71270', "aria-label": this.ariaLabel || undefined, class: className, role: "note" }, index.h("span", { key: 'd5fdb22343015cde0bbee4310a6ea79ef4962c43', class: "icon" }, this.icon ? (index.h(ModusIconMap.ModusIconMap, { icon: this.icon, size: "18" })) : this.type === 'info' ? (index.h(ModusIconMap.IconInfo, { size: "18" })) : this.type === 'question' ? (index.h(ModusIconMap.IconHelp, { size: "18" })) : null), index.h("span", { key: 'c2295954d69d9660192c6094d6751321845bc0ab', class: "message" }, index.h("slot", { key: 'c615fc24a81859e9ac8fe450468f03d4cb5fd608' }))));
    }
};
ModusMessage.style = ModusMessageStyle0;

exports.modus_message = ModusMessage;
