import { proxyCustomElement, HTMLElement, h } from '@stencil/core/internal/client';

const modusAccordionCss = "@import url(\"https://fonts.googleapis.com/css?family=Open+Sans:300,400,600,700\");.accordion{border-radius:4px;box-shadow:0 0 2px rgba(37, 42, 46, 0.3);font-family:\"Open Sans\", -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, \"Helvetica Neue\", Arial, \"Noto Sans\", sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\", \"Noto Color Emoji\";position:relative}@media (forced-colors: active){.accordion{border:1px solid transparent}}";
const ModusAccordionStyle0 = modusAccordionCss;

const ModusAccordion$1 = /*@__PURE__*/ proxyCustomElement(class ModusAccordion extends HTMLElement {
    constructor() {
        super();
        this.__registerHost();
        this.__attachShadow();
        this.ariaLabel = undefined;
    }
    render() {
        return (h("div", { key: 'c3e49155ddc4b69b7ac12d3c679c814605e86858', "aria-label": this.ariaLabel || undefined, class: "accordion" }, h("slot", { key: 'd22c2cd38bae0126dbbedd6024c127d951cf4727' })));
    }
    static get style() { return ModusAccordionStyle0; }
}, [1, "modus-accordion", {
        "ariaLabel": [1, "aria-label"]
    }]);
function defineCustomElement$1() {
    if (typeof customElements === "undefined") {
        return;
    }
    const components = ["modus-accordion"];
    components.forEach(tagName => { switch (tagName) {
        case "modus-accordion":
            if (!customElements.get(tagName)) {
                customElements.define(tagName, ModusAccordion$1);
            }
            break;
    } });
}

const ModusAccordion = ModusAccordion$1;
const defineCustomElement = defineCustomElement$1;

export { ModusAccordion, defineCustomElement };
