import { proxyCustomElement, HTMLElement, createEvent, h } from '@stencil/core/internal/client';

const modusNavbarAppsMenuCss = "@import url(\"https://fonts.googleapis.com/css?family=Open+Sans:300,400,600,700\");.apps-menu{background-color:var(--modus-body-bg, #fff);border:0.0625rem solid var(--modus-navbar-popup-border-color, #cbcdd6);border-radius:0.25rem;box-shadow:0 0 8px rgba(36, 35, 45, 0.3);color:var(--modus-body-color, #252a2e);display:flex;flex-direction:column;max-width:384px;padding:0;position:absolute;right:0;top:48px;z-index:100;align-items:flex-start;background-color:var(--modus-navbar-popup-bg, #fff);cursor:default;max-height:605px;overflow-y:auto;padding:0.5rem;width:max-content}.apps-menu.reverse{left:0}.apps-menu .app-div{width:100%}.apps-menu .app{border-color:var(--modus-navbar-popup-border-color, #464b52);border-radius:0.25rem;box-sizing:border-box;color:var(--modus-body-color, #252a2e);cursor:default;display:flex;padding:0.25rem;text-decoration:none;width:100%}.apps-menu .app:hover{background-color:var(--modus-navbar-icon-hover-bg, #e0e1e9);cursor:pointer}.apps-menu .app:active{background-color:var(--modus-navbar-icon-active-bg, #cbcdd6)}.apps-menu .app:not(:last-child){margin-bottom:0.5rem}.apps-menu .app img{margin-right:0.75rem}.apps-menu .app .right{align-self:center}.apps-menu .app .right .name{font-size:0.875rem;font-weight:600}.apps-menu .app .right .description{font-size:0.75rem}.apps-menu .category{border-top:0.0625rem solid var(--modus-navbar-popup-border-color, #464b52);color:var(--modus-body-color, #252a2e);font-size:0.75rem;font-weight:600;margin-top:0.5rem;padding-bottom:0.625rem;padding-top:1.125rem}";
const ModusNavbarAppsMenuStyle0 = modusNavbarAppsMenuCss;

const ModusNavbarAppsMenu = /*@__PURE__*/ proxyCustomElement(class ModusNavbarAppsMenu extends HTMLElement {
    constructor() {
        super();
        this.__registerHost();
        this.__attachShadow();
        this.appOpen = createEvent(this, "appOpen", 7);
        this.apps = undefined;
        this.reverse = undefined;
    }
    clickAppHandler(event, app) {
        event.preventDefault();
        window.open(app.url, '_blank');
        this.appOpen.emit(app);
    }
    render() {
        var _a;
        const direction = this.reverse ? 'reverse' : '';
        return (h("div", { key: '43839464e5f074c69989af7647bc6a228cd8d150', class: `apps-menu ${direction}`, onClick: (event) => event.preventDefault() }, (_a = this.apps) === null || _a === void 0 ? void 0 : _a.map((app) => (h("div", { class: "app-div" }, app.showCategory ? h("div", { class: "category" }, app.category) : null, h("a", { class: "app", href: app.url, onClick: (event) => this.clickAppHandler(event, app) }, h("img", { src: app.logoUrl, alt: "", height: "32", width: "32" }), h("div", { class: "right" }, h("div", { class: "name" }, app.name), app.description ? h("div", { class: "description" }, app.description) : null)))))));
    }
    static get style() { return ModusNavbarAppsMenuStyle0; }
}, [1, "modus-navbar-apps-menu", {
        "apps": [16],
        "reverse": [4]
    }]);
function defineCustomElement() {
    if (typeof customElements === "undefined") {
        return;
    }
    const components = ["modus-navbar-apps-menu"];
    components.forEach(tagName => { switch (tagName) {
        case "modus-navbar-apps-menu":
            if (!customElements.get(tagName)) {
                customElements.define(tagName, ModusNavbarAppsMenu);
            }
            break;
    } });
}

export { ModusNavbarAppsMenu as M, defineCustomElement as d };
