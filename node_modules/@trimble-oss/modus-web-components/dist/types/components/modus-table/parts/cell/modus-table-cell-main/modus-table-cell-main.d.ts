import { JSX } from '../../../../../stencil-public-runtime';
import { Cell } from '@tanstack/table-core';
import { ModusTableCellEditorArgs } from '../../../models/modus-table.models';
import { TableContext, TableCellEdited } from '../../../models/table-context.models';
export declare class ModusTableCellMain {
    el: HTMLElement;
    cell: Cell<unknown, unknown>;
    context: TableContext;
    hasRowsExpandable: boolean;
    valueChange: (props: TableCellEdited) => void;
    editMode: boolean;
    onEditModeChange(newValue: boolean): void;
    private cellEl;
    private onCellClick;
    private onCellKeyDown;
    private onCellBlur;
    readonly cellEditableKey = "cellEditable";
    readonly accessorKey = "accessorKey";
    connectedCallback(): void;
    disconnectedCallback(): void;
    getEditorType(): string;
    getEditorArgs(): ModusTableCellEditorArgs;
    handleCellClick: (event: MouseEvent) => void;
    /**
     * Returns whether a cell is editable based on row index and column ID.
     * @param rowIndex The index of the row.
     * @param columnId The ID of the column.
     * @returns Boolean indicating if the cell is editable.
     */
    handleCellEdit(rowIndex: string, columnId: string): Promise<void>;
    handleCellBlur: (event: FocusEvent) => void;
    handleCellKeydown: (event: KeyboardEvent) => void;
    handleCellEditorValueChange(newValue: string, oldValue: string): void;
    handleCellEditorKeyDown: (event: KeyboardEvent, newValue: string, oldValue: string) => void;
    renderCellValue(): JSX.Element[];
    render(): void;
}
