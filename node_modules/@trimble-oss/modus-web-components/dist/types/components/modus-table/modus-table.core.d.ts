import { ColumnSizingInfoState, ColumnSizingState, ExpandedState, PaginationState, Table, RowSelectionState, Updater, VisibilityState, SortingState, TableState, Row } from '@tanstack/table-core';
import { ModusTableColumn, ModusTableColumnSort, ModusTableRowSelectionOptions, ModusTableSortingState, ModusTableToolbarOptions } from './models/modus-table.models';
export interface TableCoreOptions {
    data: unknown[];
    columns: ModusTableColumn<unknown>[];
    columnResize: boolean;
    sort: boolean;
    pagination: boolean;
    rowSelection: boolean;
    rowSelectionOptions: ModusTableRowSelectionOptions;
    columnOrder: string[];
    toolbarOptions: ModusTableToolbarOptions | null;
    pageSizeList: number[];
    manualPagination?: boolean;
    pageCount?: number;
    manualSorting?: boolean;
    sortingState?: ModusTableSortingState;
    preSelectedRows?: RowSelectionState;
    defaultSort?: ModusTableColumnSort;
    wrapText?: boolean;
    currentPageSize: number;
    getRowId(originalRow: unknown, index: number, parent?: Row<unknown>): string;
    setExpanded: (updater: Updater<ExpandedState>) => void;
    setSorting: (updater: Updater<SortingState>) => void;
    setRowSelection: (updater: Updater<RowSelectionState>) => void;
    setPagination: (updater: Updater<PaginationState>) => void;
    setColumnSizing: (updater: Updater<ColumnSizingState>) => void;
    setColumnSizingInfo: (updater: Updater<ColumnSizingInfoState>) => void;
    setColumnVisibility: (updater: Updater<VisibilityState>) => void;
    setColumnOrder: (updater: Updater<string[]>) => void;
}
export default class ModusTableCore {
    private tableCore;
    constructor(tableOptions: TableCoreOptions);
    getTableInstance(): Table<unknown>;
    getInitialState(): TableState;
    getState<T = unknown>(updater: Updater<T>, value: T): Updater<T>;
    setState(key: string, value: Updater<unknown>): void;
    setOptions(key: string, value: unknown): void;
}
