import { r as registerInstance, c as createEvent, h } from './index-8e730124.js';

const modusBreadcrumbCss = "@import url(\"https://fonts.googleapis.com/css?family=Open+Sans:300,400,600,700\");nav{font-family:\"Open Sans\", -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, \"Helvetica Neue\", Arial, \"Noto Sans\", sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\", \"Noto Color Emoji\";font-size:0.875rem;position:relative}nav ol{align-items:center;display:flex;flex-wrap:wrap;list-style:none;margin:0;padding:0.625rem 0}nav ol li .crumb a{color:var(--modus-link-color, #217cbb);cursor:pointer;text-decoration:none}nav ol li .crumb a:hover{text-decoration:underline}nav ol li .crumb a:active{color:var(--modus-breadcrumb-item-active-color, #6c757d);text-decoration:none}nav ol li .crumb.underline a{text-decoration:underline}nav ol li .crumb .divider{color:var(--modus-breadcrumb-divider-color, #6c757d);cursor:default;padding:0 0.5rem}nav ol li .last-crumb{color:var(--modus-breadcrumb-item-active-color, #6c757d)}";
const ModusBreadcrumbStyle0 = modusBreadcrumbCss;

const ModusBreadcrumb = class {
    constructor(hostRef) {
        registerInstance(this, hostRef);
        this.crumbClick = createEvent(this, "crumbClick", 7);
        this.ariaLabel = undefined;
        this.crumbs = [];
        this.underlineLinks = undefined;
    }
    render() {
        return (h("nav", { key: 'dd4973ca7376fe9f3a407c1b2b2a7df5aa4dee03', "aria-label": this.ariaLabel || undefined }, h("ol", { key: 'c4f4f45b97aaccef1d87ce26d9fa55621416d386' }, this.crumbs.map((crumb, index) => (h("li", { key: crumb.id }, index < this.crumbs.length - 1 ? (h("span", { class: `crumb ${this.underlineLinks ? 'underline' : ''}` }, h("a", { onClick: () => this.crumbClick.emit(crumb) }, crumb.display), h("span", { class: "divider" }, '>'))) : (h("span", { class: "last-crumb", "aria-current": "page" }, crumb.display))))))));
    }
};
ModusBreadcrumb.style = ModusBreadcrumbStyle0;

export { ModusBreadcrumb as modus_breadcrumb };
