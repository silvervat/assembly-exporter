// eslint-disable-next-line
import { h } from "@stencil/core";
export class ModusList {
    handleKeyDown(e) {
        const itemsLength = this.element.children.length;
        if (e.key.toLowerCase() === 'arrowdown') {
            const index = Array.prototype.indexOf.call(this.element.children, e.target);
            let next = this.element.children.item((index + 1) % itemsLength);
            while (next === null || next === void 0 ? void 0 : next.disabled) {
                next = this.element.children.item((index + 2) % itemsLength);
            }
            next === null || next === void 0 ? void 0 : next.focusItem();
            e.preventDefault();
        }
        if (e.key.toLowerCase() === 'arrowup') {
            const index = Array.prototype.indexOf.call(this.element.children, e.target);
            let prev = this.element.children.item((index - 1) % itemsLength);
            while (prev === null || prev === void 0 ? void 0 : prev.disabled) {
                prev = this.element.children.item((index - 2) % itemsLength);
            }
            prev === null || prev === void 0 ? void 0 : prev.focusItem();
            e.preventDefault();
        }
    }
    render() {
        return (h("ul", { key: '736a3b1e1b49cfef17e38f3cf46461dbd3f688ef', part: "list-items", onKeyDown: (e) => this.handleKeyDown(e) }, h("slot", { key: '185e7bdd4c8d27b9d0c78af47db1ea4a76685608' })));
    }
    static get is() { return "modus-list"; }
    static get encapsulation() { return "shadow"; }
    static get originalStyleUrls() {
        return {
            "$": ["modus-list.scss"]
        };
    }
    static get styleUrls() {
        return {
            "$": ["modus-list.css"]
        };
    }
    static get elementRef() { return "element"; }
}
