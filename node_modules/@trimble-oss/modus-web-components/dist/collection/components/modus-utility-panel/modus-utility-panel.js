// eslint-disable-next-line @typescript-eslint/no-unused-vars
import { h, Fragment } from "@stencil/core";
export class ModusUtilityPanel {
    constructor() {
        this.handlePanelClose = () => {
            this.closePanel();
        };
        this.expanded = false;
        this.pushContent = false;
        this.targetContent = undefined;
    }
    handleExpandedChange(newValue) {
        if (newValue) {
            this.openPanel();
        }
        else {
            this.closePanel();
        }
    }
    async openPanel() {
        this.panelOpened.emit();
        if (this.pushContent) {
            this.adjustContent();
        }
    }
    async closePanel() {
        this.panelClosed.emit();
        if (this.pushContent) {
            this.adjustContent();
        }
    }
    adjustContent() {
        const content = document.querySelector(this.targetContent);
        if (content) {
            content.style.transition = 'margin-right 0.2s ease-out';
            if (this.expanded) {
                content.style.marginRight = '312px';
            }
            else {
                content.style.marginRight = '0';
            }
        }
    }
    hasSlotContent(slotName) {
        const slot = this.el.querySelector(`[slot="${slotName}"]`);
        return !!slot;
    }
    render() {
        const hasHeader = this.hasSlotContent('header');
        const hasFooter = this.hasSlotContent('footer');
        return (h("div", { key: '5b6407fdf464a29dffef00e9b0972c795a05318e', class: { 'utility-panel': true, open: this.expanded, overlay: !this.pushContent } }, h("div", { key: '57df595135741093fe21fa4400053f2f34763393', class: "panel-content" }, hasHeader && (h(Fragment, null, h("div", { class: "panel-header", "aria-labelledby": "header" }, h("slot", { name: "header" })), h("hr", null))), h("div", { key: 'cfd3e968d9d78ceb0d1a2f04c923747d55ba034f', class: "panel-body", "aria-labelledby": "body" }, h("slot", { key: '59cb2bc025128a8bea72f2804ec66b4f8630cab8', name: "body" })), hasFooter && (h(Fragment, null, h("hr", null), h("div", { class: "panel-footer", "aria-labelledby": "footer" }, h("slot", { name: "footer" })))))));
    }
    static get is() { return "modus-utility-panel"; }
    static get encapsulation() { return "shadow"; }
    static get originalStyleUrls() {
        return {
            "$": ["modus-utility-panel.scss"]
        };
    }
    static get styleUrls() {
        return {
            "$": ["modus-utility-panel.css"]
        };
    }
    static get properties() {
        return {
            "expanded": {
                "type": "boolean",
                "mutable": false,
                "complexType": {
                    "original": "boolean",
                    "resolved": "boolean",
                    "references": {}
                },
                "required": false,
                "optional": false,
                "docs": {
                    "tags": [],
                    "text": "The panel is expanded or closed"
                },
                "attribute": "expanded",
                "reflect": false,
                "defaultValue": "false"
            },
            "pushContent": {
                "type": "boolean",
                "mutable": false,
                "complexType": {
                    "original": "boolean",
                    "resolved": "boolean",
                    "references": {}
                },
                "required": false,
                "optional": false,
                "docs": {
                    "tags": [],
                    "text": "Determines if the panel pushes content or displays an overlay."
                },
                "attribute": "push-content",
                "reflect": false,
                "defaultValue": "false"
            },
            "targetContent": {
                "type": "string",
                "mutable": false,
                "complexType": {
                    "original": "string",
                    "resolved": "string",
                    "references": {}
                },
                "required": false,
                "optional": false,
                "docs": {
                    "tags": [],
                    "text": ""
                },
                "attribute": "target-content",
                "reflect": false
            }
        };
    }
    static get events() {
        return [{
                "method": "panelOpened",
                "name": "panelOpened",
                "bubbles": true,
                "cancelable": true,
                "composed": true,
                "docs": {
                    "tags": [],
                    "text": "An event that fires when the panel is opened."
                },
                "complexType": {
                    "original": "void",
                    "resolved": "void",
                    "references": {}
                }
            }, {
                "method": "panelClosed",
                "name": "panelClosed",
                "bubbles": true,
                "cancelable": true,
                "composed": true,
                "docs": {
                    "tags": [],
                    "text": "An event that fires when the panel is closed."
                },
                "complexType": {
                    "original": "void",
                    "resolved": "void",
                    "references": {}
                }
            }];
    }
    static get elementRef() { return "el"; }
    static get watchers() {
        return [{
                "propName": "expanded",
                "methodName": "handleExpandedChange"
            }];
    }
}
