// eslint-disable-next-line
import { h } from "@stencil/core";
export class ModusSpinner {
    constructor() {
        this.variants = new Map([
            ['primary', '#0063a3'],
            ['secondary', '#6a6e79'],
            ['tertiary', '#cbcdd6'],
            ['dark', '#252a2e'],
            ['success', '#006638'],
            ['danger', '#da212c'],
            ['warning', '#e49325'],
        ]);
        this.color = 'primary';
        this.size = '2rem';
    }
    render() {
        const borderColor = this.variants.has(this.color)
            ? `var(--modus-${this.color}, ${this.variants.get(this.color)})`
            : this.color;
        return (h("div", { key: '356a23fd14627f54653952f359ae0f659e0f51a0', "aria-busy": "true", class: "spinner", style: {
                'border-color': borderColor,
                'border-right-color': 'transparent',
                height: this.size,
                width: this.size,
            } }));
    }
    static get is() { return "modus-spinner"; }
    static get encapsulation() { return "shadow"; }
    static get originalStyleUrls() {
        return {
            "$": ["modus-spinner.scss"]
        };
    }
    static get styleUrls() {
        return {
            "$": ["modus-spinner.css"]
        };
    }
    static get properties() {
        return {
            "color": {
                "type": "string",
                "mutable": false,
                "complexType": {
                    "original": "string",
                    "resolved": "string",
                    "references": {}
                },
                "required": false,
                "optional": false,
                "docs": {
                    "tags": [],
                    "text": "(optional) The color of the spinner. It can be a custom color or one of the variants  - primary, secondary, tertiary, dark, success, danger and warning."
                },
                "attribute": "color",
                "reflect": false,
                "defaultValue": "'primary'"
            },
            "size": {
                "type": "string",
                "mutable": false,
                "complexType": {
                    "original": "string",
                    "resolved": "string",
                    "references": {}
                },
                "required": false,
                "optional": false,
                "docs": {
                    "tags": [],
                    "text": "(optional) The size of the spinner, will be applied to both the height and width"
                },
                "attribute": "size",
                "reflect": false,
                "defaultValue": "'2rem'"
            }
        };
    }
}
