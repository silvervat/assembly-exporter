import { KEYBOARD_DOWN, KEYBOARD_ENTER, KEYBOARD_ESCAPE, KEYBOARD_LEFT, KEYBOARD_RIGHT, KEYBOARD_UP, } from "../modus-table.constants";
export default function NavigateTableCells(props) {
    var _a, _b;
    const { eventKey: key, cellElement: cell } = props;
    let nextCell;
    const row = cell.closest('tr');
    const index = Array.prototype.indexOf.call(row.children, cell);
    switch (key === null || key === void 0 ? void 0 : key.toLowerCase()) {
        case KEYBOARD_ENTER:
        case KEYBOARD_DOWN: // Moves to down cell
            nextCell = (_a = cell.parentElement.nextSibling) === null || _a === void 0 ? void 0 : _a.children[index];
            if (nextCell)
                nextCell.focus();
            else
                cell.focus();
            break;
        case KEYBOARD_ESCAPE: // Pressing Escape does nothing but to retain the focus
            cell.focus();
            break;
        case KEYBOARD_RIGHT: // Moves to right cell
            nextCell = cell.nextSibling;
            nextCell === null || nextCell === void 0 ? void 0 : nextCell.focus();
            break;
        case KEYBOARD_LEFT: // Moves to left cell
            nextCell = cell.previousSibling;
            nextCell === null || nextCell === void 0 ? void 0 : nextCell.focus();
            break;
        case KEYBOARD_UP: // Moves to up cell
            nextCell = (_b = cell.parentElement.previousSibling) === null || _b === void 0 ? void 0 : _b.children[index];
            nextCell === null || nextCell === void 0 ? void 0 : nextCell.focus();
            break;
    }
}
