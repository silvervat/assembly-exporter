import { h, // eslint-disable-line @typescript-eslint/no-unused-vars
 } from "@stencil/core";
import { COLUMN_DEF_DATATYPE_KEY, COLUMN_DEF_SHOWTOTAL, COLUMN_DEF_ROW_SELECTION_ID, COLUMN_DEF_ROW_SELECTION_CSS, COLUMN_DEF_DATATYPE_INTEGER, } from "../modus-table.constants";
function calculateTotal(tableData, header) {
    let sum = 0;
    tableData.map((rowData) => (sum += Number(rowData[header.column.columnDef['accessorKey']])));
    return !isNaN(sum) ? sum : '';
}
export const ModusTableFooter = ({ context: { tableInstance: { getFooterGroups }, data, density, rowSelection, frozenColumns, rowActions, }, }) => {
    let checkboxSize = 'medium';
    if (density === 'compact') {
        checkboxSize = 'small';
    }
    return (h("tfoot", null, getFooterGroups().map((group) => (h("tr", { class: "summary-row" }, rowSelection && (h("td", { id: COLUMN_DEF_ROW_SELECTION_ID, key: COLUMN_DEF_ROW_SELECTION_ID, class: COLUMN_DEF_ROW_SELECTION_CSS + ' ' + checkboxSize })), group.headers.map((header) => (h("td", { id: header.id, key: header.id, class: `
                ${frozenColumns.includes(header.id) ? 'sticky-left' : ''}
                ${header.column.columnDef[COLUMN_DEF_DATATYPE_KEY] === COLUMN_DEF_DATATYPE_INTEGER ? 'text-align-right' : ''}
              ` }, header.column.columnDef[COLUMN_DEF_SHOWTOTAL] ? calculateTotal(data, header) : header.column.columnDef.footer))), rowActions.length > 0 && h("td", null))))));
};
