import { h, // eslint-disable-line @typescript-eslint/no-unused-vars
 } from "@stencil/core";
import { ModusTableColumnHeader } from "./columnHeader/modus-table-column-header";
import { ModusTableHeaderCheckbox } from "./row/selection/modus-table-header-checkbox";
export const ModusTableHeader = ({ context, onDragStart, getColumnResizing, setColumnResizing, }) => {
    const { tableInstance: { getHeaderGroups }, columnReorder, rowSelection, componentId, rowActions, } = context;
    const tableHeadClass = { 'show-resize-cursor': getColumnResizing(), 'show-column-reorder-cursor': columnReorder };
    const headerGroups = getHeaderGroups();
    const rowActionsLength = Math.min(Math.max(rowActions.length * 40, 90), 160);
    return (h("thead", { class: tableHeadClass }, headerGroups === null || headerGroups === void 0 ? void 0 : headerGroups.map((headerGroup, index) => {
        var _a;
        return (h("tr", { key: headerGroup.id }, rowSelection && h(ModusTableHeaderCheckbox, { context: context }), (_a = headerGroup.headers) === null || _a === void 0 ? void 0 :
            _a.map((header) => {
                const id = `${componentId}-${header.id}`;
                return (h(ModusTableColumnHeader, { id: id, context: context, header: header, isNestedParentHeader: index < headerGroups.length - 1, onDragStart: onDragStart, onMouseEnterResize: () => setColumnResizing(true), onMouseLeaveResize: () => setColumnResizing(false) }));
            }), rowActions.length > 0 && h("th", { class: "sticky-right", style: { width: `${rowActionsLength}px` } })));
    })));
};
