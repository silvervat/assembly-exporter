import { sortBadge as sortForBadge, sortHyperlink as sortForHyperlink } from "./sortingFunction";
describe('Sorting Functions', () => {
    const mockRows = [
        { getValue: (columnId) => (columnId === 'testColumn' ? { display: 'C', text: '2' } : null) },
        { getValue: (columnId) => (columnId === 'testColumn' ? { display: 'A', text: '1' } : null) },
        { getValue: (columnId) => (columnId === 'testColumn' ? { display: 'B', text: '3' } : null) },
    ];
    describe('sortForHyperlink', () => {
        it('should sort rows based on display value', () => {
            const sorted = [...mockRows].sort((a, b) => sortForHyperlink(a, b, 'testColumn'));
            expect(sorted[0].getValue('testColumn').display).toBe('A');
            expect(sorted[1].getValue('testColumn').display).toBe('B');
            expect(sorted[2].getValue('testColumn').display).toBe('C');
        });
    });
    describe('sortForBadge', () => {
        it('should sort rows based on text value', () => {
            const sorted = [...mockRows].sort((a, b) => sortForBadge(a, b, 'testColumn'));
            expect(sorted[0].getValue('testColumn').text).toBe('1');
            expect(sorted[1].getValue('testColumn').text).toBe('2');
            expect(sorted[2].getValue('testColumn').text).toBe('3');
        });
    });
});
