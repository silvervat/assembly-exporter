import { Host, h, // eslint-disable-line @typescript-eslint/no-unused-vars
 } from "@stencil/core";
import { IconClose } from "../../../icons/svgs/icon-close";
export class ModusNavbarSearchOverlay {
    componentDidRender() {
        var _a;
        (_a = this.modusTextInput) === null || _a === void 0 ? void 0 : _a.focusInput();
    }
    render() {
        return (h(Host, { key: 'e7e2f6c0a27303b1e13ee3ba5636408e074a6686' }, h("div", { key: 'dc742d0a964a7e1ca15dafb931b42fd322abc915', class: "overlay-wrapper" }, h("div", { key: 'c2038d34335710412d41aa8e84955ad9b2cec947', class: "search-box" }, h("modus-text-input", { key: '6ff64e9b3537ca1fdca5ae8807cc5ee8b0237558', placeholder: "Search", size: "large", type: "search", clearable: true, onValueChange: (event) => this.search.emit(event.detail), "include-search-icon": true, ref: (el) => (this.modusTextInput = el) })), h("div", { key: 'aeab44ccf9ac551b03c8487dcd0b718a673bdf65', class: "navbar-button", "data-test-id": "close-button" }, h("span", { key: 'c841a0b80c58edbb2dc2237a730df3a3859ffd8f', class: "navbar-button-icon", role: "button", tabIndex: 0, onKeyDown: (event) => event.code === 'Enter' && this.close.emit(), onClick: () => this.close.emit() }, h(IconClose, { key: '34697a8894bd5ac23eed9ce45147cd2825635bbc', size: "24" }))))));
    }
    static get is() { return "modus-navbar-search-overlay"; }
    static get originalStyleUrls() {
        return {
            "$": ["modus-navbar-search-overlay.scss"]
        };
    }
    static get styleUrls() {
        return {
            "$": ["modus-navbar-search-overlay.css"]
        };
    }
    static get events() {
        return [{
                "method": "close",
                "name": "close",
                "bubbles": true,
                "cancelable": true,
                "composed": true,
                "docs": {
                    "tags": [],
                    "text": "An event that fires on clicking on close button of search overlay"
                },
                "complexType": {
                    "original": "void",
                    "resolved": "void",
                    "references": {}
                }
            }, {
                "method": "search",
                "name": "search",
                "bubbles": true,
                "cancelable": true,
                "composed": true,
                "docs": {
                    "tags": [],
                    "text": "An event that fires on search value change."
                },
                "complexType": {
                    "original": "string",
                    "resolved": "string",
                    "references": {}
                }
            }];
    }
    static get elementRef() { return "element"; }
}
