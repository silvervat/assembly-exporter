// eslint-disable-next-line
import { h } from "@stencil/core";
import { ModusRadioButton } from "./modus-radio-button";
export class ModusRadioGroup {
    constructor() {
        this.ariaLabel = undefined;
        this.checkedId = undefined;
        this.name = undefined;
        this.radioButtons = [];
        this.size = 'medium';
    }
    componentWillLoad() {
        this.radioButtons.forEach((radioButton) => {
            this.checkedId = radioButton.checked ? radioButton.id : this.checkedId;
        });
    }
    handleButtonClick(id) {
        this.setCheckedIdAndUpdateRadioButtons(id);
        this.buttonClick.emit(this.checkedId);
    }
    handleButtonKeydown(event, id) {
        if (event.code !== 'Enter') {
            return;
        }
        this.handleButtonClick(id);
    }
    setCheckedIdAndUpdateRadioButtons(id) {
        this.checkedId = id;
        this.radioButtons.forEach((radioButton) => {
            radioButton.checked = radioButton.id === this.checkedId;
        });
    }
    render() {
        return (h("div", { key: '70f3b4f61ab1787271891923198db83eca0a67cb', class: "modus-radio-group", "aria-label": this.ariaLabel }, this.radioButtons.map((radioButton) => {
            return (h(ModusRadioButton, { size: this.size, checked: radioButton.checked, disabled: radioButton.disabled, label: radioButton.label, name: this.name, id: radioButton.id, handleButtonClick: (id) => this.handleButtonClick(id), handleKeydown: (event, id) => this.handleButtonKeydown(event, id) }));
        })));
    }
    static get is() { return "modus-radio-group"; }
    static get encapsulation() { return "shadow"; }
    static get originalStyleUrls() {
        return {
            "$": ["modus-radio-group.scss"]
        };
    }
    static get styleUrls() {
        return {
            "$": ["modus-radio-group.css"]
        };
    }
    static get properties() {
        return {
            "ariaLabel": {
                "type": "string",
                "mutable": false,
                "complexType": {
                    "original": "string | null",
                    "resolved": "string",
                    "references": {}
                },
                "required": false,
                "optional": false,
                "docs": {
                    "tags": [],
                    "text": "The radio group's aria-label."
                },
                "attribute": "aria-label",
                "reflect": false
            },
            "checkedId": {
                "type": "string",
                "mutable": true,
                "complexType": {
                    "original": "string",
                    "resolved": "string",
                    "references": {}
                },
                "required": false,
                "optional": false,
                "docs": {
                    "tags": [],
                    "text": "The ID of the checked radio button."
                },
                "attribute": "checked-id",
                "reflect": false
            },
            "name": {
                "type": "string",
                "mutable": false,
                "complexType": {
                    "original": "string",
                    "resolved": "string",
                    "references": {}
                },
                "required": false,
                "optional": false,
                "docs": {
                    "tags": [],
                    "text": "The radio button group name. Used to group individual radio elements into one group."
                },
                "attribute": "name",
                "reflect": false
            },
            "radioButtons": {
                "type": "unknown",
                "mutable": true,
                "complexType": {
                    "original": "RadioButton[]",
                    "resolved": "RadioButton[]",
                    "references": {
                        "RadioButton": {
                            "location": "import",
                            "path": "./modus-radio-button",
                            "id": "src/components/modus-radio-group/modus-radio-button.tsx::RadioButton"
                        }
                    }
                },
                "required": false,
                "optional": false,
                "docs": {
                    "tags": [],
                    "text": "The radio buttons to render."
                },
                "defaultValue": "[]"
            },
            "size": {
                "type": "string",
                "mutable": false,
                "complexType": {
                    "original": "'small' | 'medium'",
                    "resolved": "\"medium\" | \"small\"",
                    "references": {}
                },
                "required": false,
                "optional": true,
                "docs": {
                    "tags": [],
                    "text": "(optional) The size of the radiobutton."
                },
                "attribute": "size",
                "reflect": false,
                "defaultValue": "'medium'"
            }
        };
    }
    static get events() {
        return [{
                "method": "buttonClick",
                "name": "buttonClick",
                "bubbles": true,
                "cancelable": true,
                "composed": true,
                "docs": {
                    "tags": [],
                    "text": "Fires on radio button click."
                },
                "complexType": {
                    "original": "string",
                    "resolved": "string",
                    "references": {}
                }
            }];
    }
    static get watchers() {
        return [{
                "propName": "checkedId",
                "methodName": "setCheckedIdAndUpdateRadioButtons"
            }];
    }
}
