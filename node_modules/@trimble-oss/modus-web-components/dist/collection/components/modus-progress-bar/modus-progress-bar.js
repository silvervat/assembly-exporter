// eslint-disable-next-line
import { h, Host } from "@stencil/core";
export class ModusProgressBar {
    constructor() {
        this.classBySize = new Map([
            ['default', 'default'],
            ['small', 'small'],
            ['compact', 'compact'],
        ]);
        this.ariaLabel = undefined;
        this.backgroundColor = undefined;
        this.color = undefined;
        this.maxValue = 100;
        this.minValue = 0;
        this.size = 'default';
        this.text = undefined;
        this.textColor = undefined;
        this.value = 0;
    }
    getProgressStyle(percentage) {
        const progressStyle = {
            backgroundColor: this.color,
            color: this.textColor,
            width: `${percentage}%`,
        };
        return progressStyle;
    }
    getProgressBarStyle() {
        const progressBarStyle = {
            backgroundColor: this.backgroundColor,
        };
        return progressBarStyle;
    }
    render() {
        const percentage = ((this.value - this.minValue) / (this.maxValue - this.minValue)) * 100;
        const progressBarBackgroundColorClass = this.backgroundColor ? '' : 'default-background-color';
        const progressColorClass = this.color ? '' : 'default-color';
        const progressTextColor = this.textColor ? '' : 'default-text-color';
        const progressBarClass = `
      modus-progress-bar
      ${progressBarBackgroundColorClass}
      ${this.classBySize.get(this.size)}
     `;
        const progressClass = `progress ${progressColorClass} ${progressTextColor}`;
        return (h(Host, { key: '15aac189d0c000836c9283530a63590d1348b0e0', "aria-label": this.ariaLabel, "aria-valuemax": this.maxValue, "aria-valuemin": this.minValue, "aria-valuenow": this.value, role: "progressbar" }, h("div", { key: 'f1ad64202db18e70ca42b828d9ac8d6e80852426', class: progressBarClass, style: this.getProgressBarStyle() }, h("div", { key: '65497e159fce3bfe93481f0ab069c8a5b34bf57f', class: progressClass, style: this.getProgressStyle(percentage) }, this.size === 'default' && this.text))));
    }
    static get is() { return "modus-progress-bar"; }
    static get encapsulation() { return "shadow"; }
    static get originalStyleUrls() {
        return {
            "$": ["modus-progress-bar.scss"]
        };
    }
    static get styleUrls() {
        return {
            "$": ["modus-progress-bar.css"]
        };
    }
    static get properties() {
        return {
            "ariaLabel": {
                "type": "string",
                "mutable": false,
                "complexType": {
                    "original": "string | null",
                    "resolved": "string",
                    "references": {}
                },
                "required": false,
                "optional": false,
                "docs": {
                    "tags": [],
                    "text": "(optional) The progress bar's aria-label."
                },
                "attribute": "aria-label",
                "reflect": false
            },
            "backgroundColor": {
                "type": "string",
                "mutable": false,
                "complexType": {
                    "original": "string",
                    "resolved": "string",
                    "references": {}
                },
                "required": false,
                "optional": false,
                "docs": {
                    "tags": [],
                    "text": "(optional) The progress bar's background color."
                },
                "attribute": "background-color",
                "reflect": false
            },
            "color": {
                "type": "string",
                "mutable": false,
                "complexType": {
                    "original": "string",
                    "resolved": "string",
                    "references": {}
                },
                "required": false,
                "optional": false,
                "docs": {
                    "tags": [],
                    "text": "(optional) The progress bar's foreground color."
                },
                "attribute": "color",
                "reflect": false
            },
            "maxValue": {
                "type": "number",
                "mutable": false,
                "complexType": {
                    "original": "number",
                    "resolved": "number",
                    "references": {}
                },
                "required": false,
                "optional": false,
                "docs": {
                    "tags": [],
                    "text": "(optional) The progress bar's maximum value."
                },
                "attribute": "max-value",
                "reflect": false,
                "defaultValue": "100"
            },
            "minValue": {
                "type": "number",
                "mutable": false,
                "complexType": {
                    "original": "number",
                    "resolved": "number",
                    "references": {}
                },
                "required": false,
                "optional": false,
                "docs": {
                    "tags": [],
                    "text": "(optional) The progress bar's minimum value."
                },
                "attribute": "min-value",
                "reflect": false,
                "defaultValue": "0"
            },
            "size": {
                "type": "string",
                "mutable": false,
                "complexType": {
                    "original": "'default' | 'small' | 'compact'",
                    "resolved": "\"compact\" | \"default\" | \"small\"",
                    "references": {}
                },
                "required": false,
                "optional": false,
                "docs": {
                    "tags": [],
                    "text": "(optional) The progress bar's size."
                },
                "attribute": "size",
                "reflect": false,
                "defaultValue": "'default'"
            },
            "text": {
                "type": "string",
                "mutable": false,
                "complexType": {
                    "original": "string",
                    "resolved": "string",
                    "references": {}
                },
                "required": false,
                "optional": false,
                "docs": {
                    "tags": [],
                    "text": "(optional) The text displayed on the progress bar."
                },
                "attribute": "text",
                "reflect": false
            },
            "textColor": {
                "type": "string",
                "mutable": false,
                "complexType": {
                    "original": "string",
                    "resolved": "string",
                    "references": {}
                },
                "required": false,
                "optional": false,
                "docs": {
                    "tags": [],
                    "text": "(optional) The progress bar's text color."
                },
                "attribute": "text-color",
                "reflect": false
            },
            "value": {
                "type": "number",
                "mutable": false,
                "complexType": {
                    "original": "number",
                    "resolved": "number",
                    "references": {}
                },
                "required": false,
                "optional": false,
                "docs": {
                    "tags": [],
                    "text": "(optional) The progress bar's value."
                },
                "attribute": "value",
                "reflect": false,
                "defaultValue": "0"
            }
        };
    }
}
