/**********************************************************************
    THIS IS AN AUTOMATICALLY GENERATED FILE, DO NOT EDIT DIRECTLY.
***********************************************************************/
// eslint-disable-next-line
import { h } from "@stencil/core";
import { IconAccessibility } from "./generated-icons/IconAccessibility";
import { IconAccessibilityCircle } from "./generated-icons/IconAccessibilityCircle";
import { IconAdd } from "./generated-icons/IconAdd";
import { IconAddBold } from "./generated-icons/IconAddBold";
import { IconAddCircle } from "./generated-icons/IconAddCircle";
import { IconAddHeavy } from "./generated-icons/IconAddHeavy";
import { IconAddress } from "./generated-icons/IconAddress";
import { IconAdvancedInstructions } from "./generated-icons/IconAdvancedInstructions";
import { IconAlarmAdd } from "./generated-icons/IconAlarmAdd";
import { IconAlarmOff } from "./generated-icons/IconAlarmOff";
import { IconAlarmOn } from "./generated-icons/IconAlarmOn";
import { IconAlert } from "./generated-icons/IconAlert";
import { IconAlertOutlined } from "./generated-icons/IconAlertOutlined";
import { IconAlignBottom } from "./generated-icons/IconAlignBottom";
import { IconAlignCenterHoriz } from "./generated-icons/IconAlignCenterHoriz";
import { IconAlignCenterVert } from "./generated-icons/IconAlignCenterVert";
import { IconAlignLeft } from "./generated-icons/IconAlignLeft";
import { IconAlignRight } from "./generated-icons/IconAlignRight";
import { IconAlignTop } from "./generated-icons/IconAlignTop";
import { IconAngle90 } from "./generated-icons/IconAngle90";
import { IconAntenna } from "./generated-icons/IconAntenna";
import { IconApps } from "./generated-icons/IconApps";
import { IconArc } from "./generated-icons/IconArc";
import { IconArrowBack } from "./generated-icons/IconArrowBack";
import { IconArrowDown } from "./generated-icons/IconArrowDown";
import { IconArrowDownCircle } from "./generated-icons/IconArrowDownCircle";
import { IconArrowExpandDiagonalLeft } from "./generated-icons/IconArrowExpandDiagonalLeft";
import { IconArrowExpandDiagonalRight } from "./generated-icons/IconArrowExpandDiagonalRight";
import { IconArrowLeft } from "./generated-icons/IconArrowLeft";
import { IconArrowLeftCircle } from "./generated-icons/IconArrowLeftCircle";
import { IconArrowNext } from "./generated-icons/IconArrowNext";
import { IconArrowRight } from "./generated-icons/IconArrowRight";
import { IconArrowRightCircle } from "./generated-icons/IconArrowRightCircle";
import { IconArrowUp } from "./generated-icons/IconArrowUp";
import { IconArrowUpCircle } from "./generated-icons/IconArrowUpCircle";
import { IconArtificialIntelligence } from "./generated-icons/IconArtificialIntelligence";
import { IconBackupRestoreCloud } from "./generated-icons/IconBackupRestoreCloud";
import { IconBackupRestoreFile } from "./generated-icons/IconBackupRestoreFile";
import { IconBarGraph } from "./generated-icons/IconBarGraph";
import { IconBarGraphLine } from "./generated-icons/IconBarGraphLine";
import { IconBarGraphSquare } from "./generated-icons/IconBarGraphSquare";
import { IconBarcode } from "./generated-icons/IconBarcode";
import { IconBattery0Horizontal } from "./generated-icons/IconBattery0Horizontal";
import { IconBattery0Vertical } from "./generated-icons/IconBattery0Vertical";
import { IconBattery25Horizontal } from "./generated-icons/IconBattery25Horizontal";
import { IconBattery25Vertical } from "./generated-icons/IconBattery25Vertical";
import { IconBattery50Horizontal } from "./generated-icons/IconBattery50Horizontal";
import { IconBattery50Vertical } from "./generated-icons/IconBattery50Vertical";
import { IconBattery75Horizontal } from "./generated-icons/IconBattery75Horizontal";
import { IconBattery75Vertical } from "./generated-icons/IconBattery75Vertical";
import { IconBatteryChargingHorizontal } from "./generated-icons/IconBatteryChargingHorizontal";
import { IconBatteryChargingVertical } from "./generated-icons/IconBatteryChargingVertical";
import { IconBatteryFullHorizontal } from "./generated-icons/IconBatteryFullHorizontal";
import { IconBatteryFullVertical } from "./generated-icons/IconBatteryFullVertical";
import { IconBetween } from "./generated-icons/IconBetween";
import { IconBolt } from "./generated-icons/IconBolt";
import { IconBookings } from "./generated-icons/IconBookings";
import { IconBookingsOpen } from "./generated-icons/IconBookingsOpen";
import { IconBoxSelect } from "./generated-icons/IconBoxSelect";
import { IconBriefcase } from "./generated-icons/IconBriefcase";
import { IconBrightness } from "./generated-icons/IconBrightness";
import { IconBrush } from "./generated-icons/IconBrush";
import { IconBug } from "./generated-icons/IconBug";
import { IconBugReport } from "./generated-icons/IconBugReport";
import { IconBuildingCorporate } from "./generated-icons/IconBuildingCorporate";
import { IconBuildings } from "./generated-icons/IconBuildings";
import { IconCalculate } from "./generated-icons/IconCalculate";
import { IconCalculator } from "./generated-icons/IconCalculator";
import { IconCalculatorSymbols } from "./generated-icons/IconCalculatorSymbols";
import { IconCalendar } from "./generated-icons/IconCalendar";
import { IconCalendarAdd } from "./generated-icons/IconCalendarAdd";
import { IconCalendarAndKey } from "./generated-icons/IconCalendarAndKey";
import { IconCalendarBlank } from "./generated-icons/IconCalendarBlank";
import { IconCalendarBooking } from "./generated-icons/IconCalendarBooking";
import { IconCalendarCancel } from "./generated-icons/IconCalendarCancel";
import { IconCalendarCheck } from "./generated-icons/IconCalendarCheck";
import { IconCalendarClock } from "./generated-icons/IconCalendarClock";
import { IconCalendarEvent } from "./generated-icons/IconCalendarEvent";
import { IconCalendarLoadingUnloading } from "./generated-icons/IconCalendarLoadingUnloading";
import { IconCalendarLoadingUnloadingDate } from "./generated-icons/IconCalendarLoadingUnloadingDate";
import { IconCalendarPlus } from "./generated-icons/IconCalendarPlus";
import { IconCalendarRebook } from "./generated-icons/IconCalendarRebook";
import { IconCalendarReserve } from "./generated-icons/IconCalendarReserve";
import { IconCalendarShow } from "./generated-icons/IconCalendarShow";
import { IconCalendarTimeSlot } from "./generated-icons/IconCalendarTimeSlot";
import { IconCalendarWeek } from "./generated-icons/IconCalendarWeek";
import { IconCamera } from "./generated-icons/IconCamera";
import { IconCameraDisabled } from "./generated-icons/IconCameraDisabled";
import { IconCancelCircle } from "./generated-icons/IconCancelCircle";
import { IconCancelSquare } from "./generated-icons/IconCancelSquare";
import { IconCancelSquareOutlined } from "./generated-icons/IconCancelSquareOutlined";
import { IconCaretDown } from "./generated-icons/IconCaretDown";
import { IconCaretDownBold } from "./generated-icons/IconCaretDownBold";
import { IconCaretLeft } from "./generated-icons/IconCaretLeft";
import { IconCaretLeftBold } from "./generated-icons/IconCaretLeftBold";
import { IconCaretRight } from "./generated-icons/IconCaretRight";
import { IconCaretRightBold } from "./generated-icons/IconCaretRightBold";
import { IconCaretUp } from "./generated-icons/IconCaretUp";
import { IconCaretUpBold } from "./generated-icons/IconCaretUpBold";
import { IconCellMerge } from "./generated-icons/IconCellMerge";
import { IconCellProperties } from "./generated-icons/IconCellProperties";
import { IconCellSplit } from "./generated-icons/IconCellSplit";
import { IconCertificate } from "./generated-icons/IconCertificate";
import { IconChat } from "./generated-icons/IconChat";
import { IconCheck } from "./generated-icons/IconCheck";
import { IconCheckBold } from "./generated-icons/IconCheckBold";
import { IconCheckCircle } from "./generated-icons/IconCheckCircle";
import { IconCheckCircleOutlined } from "./generated-icons/IconCheckCircleOutlined";
import { IconCheckHeavy } from "./generated-icons/IconCheckHeavy";
import { IconChevronDoubleDown } from "./generated-icons/IconChevronDoubleDown";
import { IconChevronDoubleLeft } from "./generated-icons/IconChevronDoubleLeft";
import { IconChevronDoubleRight } from "./generated-icons/IconChevronDoubleRight";
import { IconChevronDoubleUp } from "./generated-icons/IconChevronDoubleUp";
import { IconChevronLeft } from "./generated-icons/IconChevronLeft";
import { IconChevronLeftBold } from "./generated-icons/IconChevronLeftBold";
import { IconChevronRight } from "./generated-icons/IconChevronRight";
import { IconChevronRightBold } from "./generated-icons/IconChevronRightBold";
import { IconCircleNotch } from "./generated-icons/IconCircleNotch";
import { IconCircleOutline } from "./generated-icons/IconCircleOutline";
import { IconClipboard } from "./generated-icons/IconClipboard";
import { IconClipboardActions } from "./generated-icons/IconClipboardActions";
import { IconClipboardCheck } from "./generated-icons/IconClipboardCheck";
import { IconClipboardEmpty } from "./generated-icons/IconClipboardEmpty";
import { IconClipboardPlanning } from "./generated-icons/IconClipboardPlanning";
import { IconClock } from "./generated-icons/IconClock";
import { IconClockAdd } from "./generated-icons/IconClockAdd";
import { IconClockLocked } from "./generated-icons/IconClockLocked";
import { IconClose } from "./generated-icons/IconClose";
import { IconCloseBold } from "./generated-icons/IconCloseBold";
import { IconCloseHeavy } from "./generated-icons/IconCloseHeavy";
import { IconCloud } from "./generated-icons/IconCloud";
import { IconCloudConnected } from "./generated-icons/IconCloudConnected";
import { IconCloudDisconnected } from "./generated-icons/IconCloudDisconnected";
import { IconCloudDownload } from "./generated-icons/IconCloudDownload";
import { IconCloudUpload } from "./generated-icons/IconCloudUpload";
import { IconCode } from "./generated-icons/IconCode";
import { IconCollapse } from "./generated-icons/IconCollapse";
import { IconCollapseBold } from "./generated-icons/IconCollapseBold";
import { IconColorPicker } from "./generated-icons/IconColorPicker";
import { IconColumnCopy } from "./generated-icons/IconColumnCopy";
import { IconColumnCut } from "./generated-icons/IconColumnCut";
import { IconColumnDelete } from "./generated-icons/IconColumnDelete";
import { IconColumnInsertAfter } from "./generated-icons/IconColumnInsertAfter";
import { IconColumnInsertBefore } from "./generated-icons/IconColumnInsertBefore";
import { IconColumnPasteAfter } from "./generated-icons/IconColumnPasteAfter";
import { IconColumnPasteBefore } from "./generated-icons/IconColumnPasteBefore";
import { IconColumnProperties } from "./generated-icons/IconColumnProperties";
import { IconColumns } from "./generated-icons/IconColumns";
import { IconCombine } from "./generated-icons/IconCombine";
import { IconComment } from "./generated-icons/IconComment";
import { IconCompareArrows } from "./generated-icons/IconCompareArrows";
import { IconCompass } from "./generated-icons/IconCompass";
import { IconComponent } from "./generated-icons/IconComponent";
import { IconContacts } from "./generated-icons/IconContacts";
import { IconContrast } from "./generated-icons/IconContrast";
import { IconCopyContent } from "./generated-icons/IconCopyContent";
import { IconCreditCard } from "./generated-icons/IconCreditCard";
import { IconCrop } from "./generated-icons/IconCrop";
import { IconCube } from "./generated-icons/IconCube";
import { IconCursor } from "./generated-icons/IconCursor";
import { IconCursorAdd } from "./generated-icons/IconCursorAdd";
import { IconCursorRemove } from "./generated-icons/IconCursorRemove";
import { IconDashboard } from "./generated-icons/IconDashboard";
import { IconDayMostlyCloudy } from "./generated-icons/IconDayMostlyCloudy";
import { IconDayPartlyCloudy } from "./generated-icons/IconDayPartlyCloudy";
import { IconDelete } from "./generated-icons/IconDelete";
import { IconDeliveryTruck } from "./generated-icons/IconDeliveryTruck";
import { IconDeliveryTruckAllocate } from "./generated-icons/IconDeliveryTruckAllocate";
import { IconDeliveryTruckMotion } from "./generated-icons/IconDeliveryTruckMotion";
import { IconDownload } from "./generated-icons/IconDownload";
import { IconDownloadLine } from "./generated-icons/IconDownloadLine";
import { IconDownloadXls } from "./generated-icons/IconDownloadXls";
import { IconDragCorner } from "./generated-icons/IconDragCorner";
import { IconDragHorizontal } from "./generated-icons/IconDragHorizontal";
import { IconDragIndicator } from "./generated-icons/IconDragIndicator";
import { IconDragVertical } from "./generated-icons/IconDragVertical";
import { IconDrivers } from "./generated-icons/IconDrivers";
import { IconDrizzle } from "./generated-icons/IconDrizzle";
import { IconDrone } from "./generated-icons/IconDrone";
import { IconEarningsStatement } from "./generated-icons/IconEarningsStatement";
import { IconEmail } from "./generated-icons/IconEmail";
import { IconEnvelope } from "./generated-icons/IconEnvelope";
import { IconEraser } from "./generated-icons/IconEraser";
import { IconExclamationMark } from "./generated-icons/IconExclamationMark";
import { IconExpand } from "./generated-icons/IconExpand";
import { IconExpandBold } from "./generated-icons/IconExpandBold";
import { IconExpandLess } from "./generated-icons/IconExpandLess";
import { IconExpandLessBold } from "./generated-icons/IconExpandLessBold";
import { IconExpandLessCircle } from "./generated-icons/IconExpandLessCircle";
import { IconExpandMore } from "./generated-icons/IconExpandMore";
import { IconExpandMoreBold } from "./generated-icons/IconExpandMoreBold";
import { IconExpandMoreCircle } from "./generated-icons/IconExpandMoreCircle";
import { IconExport } from "./generated-icons/IconExport";
import { IconFactory } from "./generated-icons/IconFactory";
import { IconFastForward } from "./generated-icons/IconFastForward";
import { IconFastRewind } from "./generated-icons/IconFastRewind";
import { IconFile } from "./generated-icons/IconFile";
import { IconFileBarGraph } from "./generated-icons/IconFileBarGraph";
import { IconFileCheckIn } from "./generated-icons/IconFileCheckIn";
import { IconFileCheckOut } from "./generated-icons/IconFileCheckOut";
import { IconFileCloud } from "./generated-icons/IconFileCloud";
import { IconFileCopy } from "./generated-icons/IconFileCopy";
import { IconFileEdit } from "./generated-icons/IconFileEdit";
import { IconFileMerge } from "./generated-icons/IconFileMerge";
import { IconFileMissing } from "./generated-icons/IconFileMissing";
import { IconFileNew } from "./generated-icons/IconFileNew";
import { IconFileSecure } from "./generated-icons/IconFileSecure";
import { IconFileTable } from "./generated-icons/IconFileTable";
import { IconFileTypeBmpf } from "./generated-icons/IconFileTypeBmpf";
import { IconFileTypeCsv } from "./generated-icons/IconFileTypeCsv";
import { IconFileTypeCur } from "./generated-icons/IconFileTypeCur";
import { IconFileTypeDoc } from "./generated-icons/IconFileTypeDoc";
import { IconFileTypeIco } from "./generated-icons/IconFileTypeIco";
import { IconFileTypeKey } from "./generated-icons/IconFileTypeKey";
import { IconFileTypeLog } from "./generated-icons/IconFileTypeLog";
import { IconFileTypeNumbers } from "./generated-icons/IconFileTypeNumbers";
import { IconFileTypePdf } from "./generated-icons/IconFileTypePdf";
import { IconFileTypeRfi } from "./generated-icons/IconFileTypeRfi";
import { IconFileTypeRfq } from "./generated-icons/IconFileTypeRfq";
import { IconFileTypeRtf } from "./generated-icons/IconFileTypeRtf";
import { IconFileTypeText } from "./generated-icons/IconFileTypeText";
import { IconFileTypeTif } from "./generated-icons/IconFileTypeTif";
import { IconFileTypeTmp } from "./generated-icons/IconFileTypeTmp";
import { IconFileTypeXls } from "./generated-icons/IconFileTypeXls";
import { IconFilter } from "./generated-icons/IconFilter";
import { IconFilterList } from "./generated-icons/IconFilterList";
import { IconFilterOff } from "./generated-icons/IconFilterOff";
import { IconFlag } from "./generated-icons/IconFlag";
import { IconFlagFinish } from "./generated-icons/IconFlagFinish";
import { IconFloorplan } from "./generated-icons/IconFloorplan";
import { IconFlowchart } from "./generated-icons/IconFlowchart";
import { IconFog } from "./generated-icons/IconFog";
import { IconFolderClosed } from "./generated-icons/IconFolderClosed";
import { IconFolderLocked } from "./generated-icons/IconFolderLocked";
import { IconFolderNew } from "./generated-icons/IconFolderNew";
import { IconFolderOpen } from "./generated-icons/IconFolderOpen";
import { IconFolderPersonal } from "./generated-icons/IconFolderPersonal";
import { IconFolderProject } from "./generated-icons/IconFolderProject";
import { IconFolderPublic } from "./generated-icons/IconFolderPublic";
import { IconFolderShare } from "./generated-icons/IconFolderShare";
import { IconFolderUnlocked } from "./generated-icons/IconFolderUnlocked";
import { IconFootprints } from "./generated-icons/IconFootprints";
import { IconFrame } from "./generated-icons/IconFrame";
import { IconFreightMarket } from "./generated-icons/IconFreightMarket";
import { IconFreightMatching } from "./generated-icons/IconFreightMatching";
import { IconFreightTrolley } from "./generated-icons/IconFreightTrolley";
import { IconFullScreen } from "./generated-icons/IconFullScreen";
import { IconGanttChart } from "./generated-icons/IconGanttChart";
import { IconGavel } from "./generated-icons/IconGavel";
import { IconGears } from "./generated-icons/IconGears";
import { IconGreaterThanEqualTo } from "./generated-icons/IconGreaterThanEqualTo";
import { IconGroupItems } from "./generated-icons/IconGroupItems";
import { IconHail } from "./generated-icons/IconHail";
import { IconHailHeavy } from "./generated-icons/IconHailHeavy";
import { IconHailLight } from "./generated-icons/IconHailLight";
import { IconHammer } from "./generated-icons/IconHammer";
import { IconHand } from "./generated-icons/IconHand";
import { IconHardHat } from "./generated-icons/IconHardHat";
import { IconHeadset } from "./generated-icons/IconHeadset";
import { IconHeart } from "./generated-icons/IconHeart";
import { IconHelicopter } from "./generated-icons/IconHelicopter";
import { IconHelp } from "./generated-icons/IconHelp";
import { IconHelpOutlined } from "./generated-icons/IconHelpOutlined";
import { IconHistory } from "./generated-icons/IconHistory";
import { IconHome } from "./generated-icons/IconHome";
import { IconHourglass } from "./generated-icons/IconHourglass";
import { IconIce } from "./generated-icons/IconIce";
import { IconImage } from "./generated-icons/IconImage";
import { IconImageScene } from "./generated-icons/IconImageScene";
import { IconInCabDevice } from "./generated-icons/IconInCabDevice";
import { IconInFieldDevice } from "./generated-icons/IconInFieldDevice";
import { IconInfo } from "./generated-icons/IconInfo";
import { IconInfoOutlined } from "./generated-icons/IconInfoOutlined";
import { IconInfoToken } from "./generated-icons/IconInfoToken";
import { IconInspect } from "./generated-icons/IconInspect";
import { IconInvoice } from "./generated-icons/IconInvoice";
import { IconItemBeginsWith } from "./generated-icons/IconItemBeginsWith";
import { IconItemContains } from "./generated-icons/IconItemContains";
import { IconItemDoesNotContain } from "./generated-icons/IconItemDoesNotContain";
import { IconItemDoesNotEqual } from "./generated-icons/IconItemDoesNotEqual";
import { IconItemEndsWith } from "./generated-icons/IconItemEndsWith";
import { IconItemEquals } from "./generated-icons/IconItemEquals";
import { IconKey } from "./generated-icons/IconKey";
import { IconKeyboard } from "./generated-icons/IconKeyboard";
import { IconKeyboardKeys } from "./generated-icons/IconKeyboardKeys";
import { IconLabs } from "./generated-icons/IconLabs";
import { IconLanguage } from "./generated-icons/IconLanguage";
import { IconLaunch } from "./generated-icons/IconLaunch";
import { IconLaunchBold } from "./generated-icons/IconLaunchBold";
import { IconLayer } from "./generated-icons/IconLayer";
import { IconLearn } from "./generated-icons/IconLearn";
import { IconLessThanEqualTo } from "./generated-icons/IconLessThanEqualTo";
import { IconLightbulbOff } from "./generated-icons/IconLightbulbOff";
import { IconLightbulbOn } from "./generated-icons/IconLightbulbOn";
import { IconLightning } from "./generated-icons/IconLightning";
import { IconLineDiagonal } from "./generated-icons/IconLineDiagonal";
import { IconLineGraph } from "./generated-icons/IconLineGraph";
import { IconLink } from "./generated-icons/IconLink";
import { IconLinkBroken } from "./generated-icons/IconLinkBroken";
import { IconLinkOff } from "./generated-icons/IconLinkOff";
import { IconListBulleted } from "./generated-icons/IconListBulleted";
import { IconListNumbered } from "./generated-icons/IconListNumbered";
import { IconLocation } from "./generated-icons/IconLocation";
import { IconLocationPoint } from "./generated-icons/IconLocationPoint";
import { IconLock } from "./generated-icons/IconLock";
import { IconLockOpen } from "./generated-icons/IconLockOpen";
import { IconMagicWand } from "./generated-icons/IconMagicWand";
import { IconManageAccounts } from "./generated-icons/IconManageAccounts";
import { IconManagePeople } from "./generated-icons/IconManagePeople";
import { IconMap } from "./generated-icons/IconMap";
import { IconMap2d } from "./generated-icons/IconMap2d";
import { IconMapMarker } from "./generated-icons/IconMapMarker";
import { IconMapMarkers } from "./generated-icons/IconMapMarkers";
import { IconMapPoi } from "./generated-icons/IconMapPoi";
import { IconMasterData } from "./generated-icons/IconMasterData";
import { IconMegaphone } from "./generated-icons/IconMegaphone";
import { IconMenu } from "./generated-icons/IconMenu";
import { IconMenuCircle } from "./generated-icons/IconMenuCircle";
import { IconMic } from "./generated-icons/IconMic";
import { IconMix } from "./generated-icons/IconMix";
import { IconMonetarization } from "./generated-icons/IconMonetarization";
import { IconMoon } from "./generated-icons/IconMoon";
import { IconMoreCircle } from "./generated-icons/IconMoreCircle";
import { IconMoreHorizontal } from "./generated-icons/IconMoreHorizontal";
import { IconMoreVertical } from "./generated-icons/IconMoreVertical";
import { IconMouse } from "./generated-icons/IconMouse";
import { IconMove } from "./generated-icons/IconMove";
import { IconMoveLastDown } from "./generated-icons/IconMoveLastDown";
import { IconMoveLastLeft } from "./generated-icons/IconMoveLastLeft";
import { IconMoveLastRight } from "./generated-icons/IconMoveLastRight";
import { IconMoveLastUp } from "./generated-icons/IconMoveLastUp";
import { IconNightMostlyCloudy } from "./generated-icons/IconNightMostlyCloudy";
import { IconNightPartlyCloudy } from "./generated-icons/IconNightPartlyCloudy";
import { IconNotSyncedBold } from "./generated-icons/IconNotSyncedBold";
import { IconNotifications } from "./generated-icons/IconNotifications";
import { IconNotificationsOff } from "./generated-icons/IconNotificationsOff";
import { IconObjectMirror } from "./generated-icons/IconObjectMirror";
import { IconObjectOutline } from "./generated-icons/IconObjectOutline";
import { IconObjectRotate } from "./generated-icons/IconObjectRotate";
import { IconOffers } from "./generated-icons/IconOffers";
import { IconOvercast } from "./generated-icons/IconOvercast";
import { IconPackage } from "./generated-icons/IconPackage";
import { IconPackageDelivered } from "./generated-icons/IconPackageDelivered";
import { IconPackageDelivery } from "./generated-icons/IconPackageDelivery";
import { IconPackageMissing } from "./generated-icons/IconPackageMissing";
import { IconPackagePickup } from "./generated-icons/IconPackagePickup";
import { IconPackageSent } from "./generated-icons/IconPackageSent";
import { IconPaintBucket } from "./generated-icons/IconPaintBucket";
import { IconPalette } from "./generated-icons/IconPalette";
import { IconPan } from "./generated-icons/IconPan";
import { IconPaperclip } from "./generated-icons/IconPaperclip";
import { IconPassword } from "./generated-icons/IconPassword";
import { IconPauseCircle } from "./generated-icons/IconPauseCircle";
import { IconPaymentInstant } from "./generated-icons/IconPaymentInstant";
import { IconPen } from "./generated-icons/IconPen";
import { IconPencil } from "./generated-icons/IconPencil";
import { IconPeopleAdd } from "./generated-icons/IconPeopleAdd";
import { IconPeopleCouple } from "./generated-icons/IconPeopleCouple";
import { IconPeopleGroup } from "./generated-icons/IconPeopleGroup";
import { IconPerson } from "./generated-icons/IconPerson";
import { IconPersonAccount } from "./generated-icons/IconPersonAccount";
import { IconPersonAdd } from "./generated-icons/IconPersonAdd";
import { IconPersonClock } from "./generated-icons/IconPersonClock";
import { IconPersonEdit } from "./generated-icons/IconPersonEdit";
import { IconPersonRemove } from "./generated-icons/IconPersonRemove";
import { IconPhone } from "./generated-icons/IconPhone";
import { IconPhoneCall } from "./generated-icons/IconPhoneCall";
import { IconPhoneHangUp } from "./generated-icons/IconPhoneHangUp";
import { IconPhoneMobile } from "./generated-icons/IconPhoneMobile";
import { IconPin } from "./generated-icons/IconPin";
import { IconPinAdd } from "./generated-icons/IconPinAdd";
import { IconPinStraight } from "./generated-icons/IconPinStraight";
import { IconPinStraightCancel } from "./generated-icons/IconPinStraightCancel";
import { IconPlayCircle } from "./generated-icons/IconPlayCircle";
import { IconPointMarkerTool } from "./generated-icons/IconPointMarkerTool";
import { IconPolygon } from "./generated-icons/IconPolygon";
import { IconPolygonAreaTool } from "./generated-icons/IconPolygonAreaTool";
import { IconPolygonConcave } from "./generated-icons/IconPolygonConcave";
import { IconPolygonCone } from "./generated-icons/IconPolygonCone";
import { IconPolygonDragRectangle } from "./generated-icons/IconPolygonDragRectangle";
import { IconPolygonLineTool } from "./generated-icons/IconPolygonLineTool";
import { IconPolygonMerge } from "./generated-icons/IconPolygonMerge";
import { IconPolygonSelect } from "./generated-icons/IconPolygonSelect";
import { IconPrinter } from "./generated-icons/IconPrinter";
import { IconPulse } from "./generated-icons/IconPulse";
import { IconQrCode } from "./generated-icons/IconQrCode";
import { IconQuestion } from "./generated-icons/IconQuestion";
import { IconQuickLogin } from "./generated-icons/IconQuickLogin";
import { IconRain } from "./generated-icons/IconRain";
import { IconRainHeavy } from "./generated-icons/IconRainHeavy";
import { IconRainIcy } from "./generated-icons/IconRainIcy";
import { IconRaindrop } from "./generated-icons/IconRaindrop";
import { IconRedo } from "./generated-icons/IconRedo";
import { IconRedoBold } from "./generated-icons/IconRedoBold";
import { IconRefresh } from "./generated-icons/IconRefresh";
import { IconRefreshBold } from "./generated-icons/IconRefreshBold";
import { IconRemove } from "./generated-icons/IconRemove";
import { IconRemoveBold } from "./generated-icons/IconRemoveBold";
import { IconRemoveCircle } from "./generated-icons/IconRemoveCircle";
import { IconRemoveHeavy } from "./generated-icons/IconRemoveHeavy";
import { IconReply } from "./generated-icons/IconReply";
import { IconRowAdd } from "./generated-icons/IconRowAdd";
import { IconRowCopy } from "./generated-icons/IconRowCopy";
import { IconRowCut } from "./generated-icons/IconRowCut";
import { IconRowDelete } from "./generated-icons/IconRowDelete";
import { IconRowHighlighted } from "./generated-icons/IconRowHighlighted";
import { IconRowInsertAfter } from "./generated-icons/IconRowInsertAfter";
import { IconRowInsertBefore } from "./generated-icons/IconRowInsertBefore";
import { IconRowPasteAfter } from "./generated-icons/IconRowPasteAfter";
import { IconRowPasteBefore } from "./generated-icons/IconRowPasteBefore";
import { IconRowProperties } from "./generated-icons/IconRowProperties";
import { IconRowsShowLess } from "./generated-icons/IconRowsShowLess";
import { IconRowsShowMore } from "./generated-icons/IconRowsShowMore";
import { IconRssFeed } from "./generated-icons/IconRssFeed";
import { IconRuler } from "./generated-icons/IconRuler";
import { IconSatellite } from "./generated-icons/IconSatellite";
import { IconSaveAs } from "./generated-icons/IconSaveAs";
import { IconSaveDisk } from "./generated-icons/IconSaveDisk";
import { IconScanBarcode } from "./generated-icons/IconScanBarcode";
import { IconSchema } from "./generated-icons/IconSchema";
import { IconScissors } from "./generated-icons/IconScissors";
import { IconScreen } from "./generated-icons/IconScreen";
import { IconScreenshot } from "./generated-icons/IconScreenshot";
import { IconSearch } from "./generated-icons/IconSearch";
import { IconServer } from "./generated-icons/IconServer";
import { IconServerRound } from "./generated-icons/IconServerRound";
import { IconSettings } from "./generated-icons/IconSettings";
import { IconShare } from "./generated-icons/IconShare";
import { IconShield } from "./generated-icons/IconShield";
import { IconShoppingCart } from "./generated-icons/IconShoppingCart";
import { IconShoppingCartMinus } from "./generated-icons/IconShoppingCartMinus";
import { IconShoppingCartPlus } from "./generated-icons/IconShoppingCartPlus";
import { IconShortcut } from "./generated-icons/IconShortcut";
import { IconShovel } from "./generated-icons/IconShovel";
import { IconSignIn } from "./generated-icons/IconSignIn";
import { IconSignOut } from "./generated-icons/IconSignOut";
import { IconSignal } from "./generated-icons/IconSignal";
import { IconSmileyDissatisfied } from "./generated-icons/IconSmileyDissatisfied";
import { IconSmileyDissatisfiedOutlined } from "./generated-icons/IconSmileyDissatisfiedOutlined";
import { IconSmileyNeutral } from "./generated-icons/IconSmileyNeutral";
import { IconSmileyNeutralOutlined } from "./generated-icons/IconSmileyNeutralOutlined";
import { IconSmileySatisfied } from "./generated-icons/IconSmileySatisfied";
import { IconSmileySatisfiedOutlined } from "./generated-icons/IconSmileySatisfiedOutlined";
import { IconSmileySomewhatDissatisfied } from "./generated-icons/IconSmileySomewhatDissatisfied";
import { IconSmileySomewhatDissatisfiedOutlined } from "./generated-icons/IconSmileySomewhatDissatisfiedOutlined";
import { IconSmileySomewhatSatisfied } from "./generated-icons/IconSmileySomewhatSatisfied";
import { IconSmileySomewhatSatisfiedOutlined } from "./generated-icons/IconSmileySomewhatSatisfiedOutlined";
import { IconSnowHeavy } from "./generated-icons/IconSnowHeavy";
import { IconSnowLight } from "./generated-icons/IconSnowLight";
import { IconSnowParticle } from "./generated-icons/IconSnowParticle";
import { IconSnowflake } from "./generated-icons/IconSnowflake";
import { IconSnowflakes } from "./generated-icons/IconSnowflakes";
import { IconSort } from "./generated-icons/IconSort";
import { IconSortAlphaDown } from "./generated-icons/IconSortAlphaDown";
import { IconSortAlphaUp } from "./generated-icons/IconSortAlphaUp";
import { IconSortArrowDown } from "./generated-icons/IconSortArrowDown";
import { IconSortArrowUp } from "./generated-icons/IconSortArrowUp";
import { IconSortDown } from "./generated-icons/IconSortDown";
import { IconSortUp } from "./generated-icons/IconSortUp";
import { IconStar } from "./generated-icons/IconStar";
import { IconStarHalf } from "./generated-icons/IconStarHalf";
import { IconStarLocked } from "./generated-icons/IconStarLocked";
import { IconStarNorthern } from "./generated-icons/IconStarNorthern";
import { IconStarOutlined } from "./generated-icons/IconStarOutlined";
import { IconStars } from "./generated-icons/IconStars";
import { IconStopCircle } from "./generated-icons/IconStopCircle";
import { IconStreetMeasurement } from "./generated-icons/IconStreetMeasurement";
import { IconSubmitExpense } from "./generated-icons/IconSubmitExpense";
import { IconSun } from "./generated-icons/IconSun";
import { IconSwap } from "./generated-icons/IconSwap";
import { IconSwitchAccount } from "./generated-icons/IconSwitchAccount";
import { IconSwitchLeft } from "./generated-icons/IconSwitchLeft";
import { IconSwitchRight } from "./generated-icons/IconSwitchRight";
import { IconSync } from "./generated-icons/IconSync";
import { IconSyncBold } from "./generated-icons/IconSyncBold";
import { IconSyncOff } from "./generated-icons/IconSyncOff";
import { IconTable } from "./generated-icons/IconTable";
import { IconTablet } from "./generated-icons/IconTablet";
import { IconTextAlignLeft } from "./generated-icons/IconTextAlignLeft";
import { IconTextAlignRight } from "./generated-icons/IconTextAlignRight";
import { IconTextBold } from "./generated-icons/IconTextBold";
import { IconTextCentered } from "./generated-icons/IconTextCentered";
import { IconTextGrow } from "./generated-icons/IconTextGrow";
import { IconTextInput } from "./generated-icons/IconTextInput";
import { IconTextInputLong } from "./generated-icons/IconTextInputLong";
import { IconTextInputShort } from "./generated-icons/IconTextInputShort";
import { IconTextItalic } from "./generated-icons/IconTextItalic";
import { IconTextMarker } from "./generated-icons/IconTextMarker";
import { IconTextShrink } from "./generated-icons/IconTextShrink";
import { IconTextStrikethrough } from "./generated-icons/IconTextStrikethrough";
import { IconTextTruncated } from "./generated-icons/IconTextTruncated";
import { IconTextUnderlined } from "./generated-icons/IconTextUnderlined";
import { IconThermometerCold } from "./generated-icons/IconThermometerCold";
import { IconThermometerHot } from "./generated-icons/IconThermometerHot";
import { IconThumbsDown } from "./generated-icons/IconThumbsDown";
import { IconThumbsUp } from "./generated-icons/IconThumbsUp";
import { IconThunderstormHeavy } from "./generated-icons/IconThunderstormHeavy";
import { IconThunderstormLight } from "./generated-icons/IconThunderstormLight";
import { IconTicket } from "./generated-icons/IconTicket";
import { IconTicketPlane } from "./generated-icons/IconTicketPlane";
import { IconTimeOffWork } from "./generated-icons/IconTimeOffWork";
import { IconTimeSlotNotReserved } from "./generated-icons/IconTimeSlotNotReserved";
import { IconTimeSlotReserved } from "./generated-icons/IconTimeSlotReserved";
import { IconTimer } from "./generated-icons/IconTimer";
import { IconTimerCountdown } from "./generated-icons/IconTimerCountdown";
import { IconTimesheet } from "./generated-icons/IconTimesheet";
import { IconTimesheetApprove } from "./generated-icons/IconTimesheetApprove";
import { IconToggleCenter } from "./generated-icons/IconToggleCenter";
import { IconToggleLeftPanel } from "./generated-icons/IconToggleLeftPanel";
import { IconToggleOff } from "./generated-icons/IconToggleOff";
import { IconToggleOn } from "./generated-icons/IconToggleOn";
import { IconToggleRightPanel } from "./generated-icons/IconToggleRightPanel";
import { IconTrafficCone } from "./generated-icons/IconTrafficCone";
import { IconTreeStructure } from "./generated-icons/IconTreeStructure";
import { IconTriangleDown } from "./generated-icons/IconTriangleDown";
import { IconTriangleLeft } from "./generated-icons/IconTriangleLeft";
import { IconTriangleRight } from "./generated-icons/IconTriangleRight";
import { IconTriangleUp } from "./generated-icons/IconTriangleUp";
import { IconTrimbleLogo } from "./generated-icons/IconTrimbleLogo";
import { IconTune } from "./generated-icons/IconTune";
import { IconTuneCircle } from "./generated-icons/IconTuneCircle";
import { IconUncombine } from "./generated-icons/IconUncombine";
import { IconUndo } from "./generated-icons/IconUndo";
import { IconUndoBold } from "./generated-icons/IconUndoBold";
import { IconUnfoldLess } from "./generated-icons/IconUnfoldLess";
import { IconUnfoldMore } from "./generated-icons/IconUnfoldMore";
import { IconUnsortedArrows } from "./generated-icons/IconUnsortedArrows";
import { IconUpdate } from "./generated-icons/IconUpdate";
import { IconUpload } from "./generated-icons/IconUpload";
import { IconUploadXls } from "./generated-icons/IconUploadXls";
import { IconUserAccount } from "./generated-icons/IconUserAccount";
import { IconUserActive } from "./generated-icons/IconUserActive";
import { IconUserGuide } from "./generated-icons/IconUserGuide";
import { IconUserInactive } from "./generated-icons/IconUserInactive";
import { IconUserPasskey } from "./generated-icons/IconUserPasskey";
import { IconUserPermissions } from "./generated-icons/IconUserPermissions";
import { IconVideo } from "./generated-icons/IconVideo";
import { IconVideoAdd } from "./generated-icons/IconVideoAdd";
import { IconVideoDisabled } from "./generated-icons/IconVideoDisabled";
import { IconViewGrid } from "./generated-icons/IconViewGrid";
import { IconViewList } from "./generated-icons/IconViewList";
import { IconVisibilityOff } from "./generated-icons/IconVisibilityOff";
import { IconVisibilityOn } from "./generated-icons/IconVisibilityOn";
import { IconVolumeDown } from "./generated-icons/IconVolumeDown";
import { IconVolumeMute } from "./generated-icons/IconVolumeMute";
import { IconVolumeUp } from "./generated-icons/IconVolumeUp";
import { IconVrXr } from "./generated-icons/IconVrXr";
import { IconWarning } from "./generated-icons/IconWarning";
import { IconWarningOutlined } from "./generated-icons/IconWarningOutlined";
import { IconWeb } from "./generated-icons/IconWeb";
import { IconWheelbarrow } from "./generated-icons/IconWheelbarrow";
import { IconWidgets } from "./generated-icons/IconWidgets";
import { IconWifi } from "./generated-icons/IconWifi";
import { IconWifiNoInternet } from "./generated-icons/IconWifiNoInternet";
import { IconWifiOff } from "./generated-icons/IconWifiOff";
import { IconWind } from "./generated-icons/IconWind";
import { IconWindow } from "./generated-icons/IconWindow";
import { IconWindowDockUndock } from "./generated-icons/IconWindowDockUndock";
import { IconWindowFit } from "./generated-icons/IconWindowFit";
import { IconWindowResize } from "./generated-icons/IconWindowResize";
import { IconWindowSidePanel } from "./generated-icons/IconWindowSidePanel";
import { IconWindowTemplate } from "./generated-icons/IconWindowTemplate";
import { IconWindowViews } from "./generated-icons/IconWindowViews";
import { IconWindowWireframe } from "./generated-icons/IconWindowWireframe";
import { IconWinteryMix } from "./generated-icons/IconWinteryMix";
import { IconWrench } from "./generated-icons/IconWrench";
import { IconZoomBox } from "./generated-icons/IconZoomBox";
import { IconZoomIn } from "./generated-icons/IconZoomIn";
import { IconZoomOut } from "./generated-icons/IconZoomOut";
export const ModusIconMap = (props) => {
    switch (props.icon) {
        case 'accessibility':
            return h(IconAccessibility, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'accessibility_circle':
            return h(IconAccessibilityCircle, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'add':
            return h(IconAdd, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'add_bold':
            return h(IconAddBold, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'add_circle':
            return h(IconAddCircle, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'add_heavy':
            return h(IconAddHeavy, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'address':
            return h(IconAddress, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'advanced_instructions':
            return h(IconAdvancedInstructions, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'alarm_add':
            return h(IconAlarmAdd, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'alarm_off':
            return h(IconAlarmOff, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'alarm_on':
            return h(IconAlarmOn, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'alert':
            return h(IconAlert, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'alert_outlined':
            return h(IconAlertOutlined, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'align_bottom':
            return h(IconAlignBottom, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'align_center_horiz':
            return h(IconAlignCenterHoriz, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'align_center_vert':
            return h(IconAlignCenterVert, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'align_left':
            return h(IconAlignLeft, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'align_right':
            return h(IconAlignRight, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'align_top':
            return h(IconAlignTop, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'angle90':
            return h(IconAngle90, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'antenna':
            return h(IconAntenna, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'apps':
            return h(IconApps, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'arc':
            return h(IconArc, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'arrow_back':
            return h(IconArrowBack, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'arrow_down':
            return h(IconArrowDown, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'arrow_down_circle':
            return h(IconArrowDownCircle, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'arrow_expand_diagonal_left':
            return h(IconArrowExpandDiagonalLeft, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'arrow_expand_diagonal_right':
            return h(IconArrowExpandDiagonalRight, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'arrow_left':
            return h(IconArrowLeft, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'arrow_left_circle':
            return h(IconArrowLeftCircle, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'arrow_next':
            return h(IconArrowNext, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'arrow_right':
            return h(IconArrowRight, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'arrow_right_circle':
            return h(IconArrowRightCircle, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'arrow_up':
            return h(IconArrowUp, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'arrow_up_circle':
            return h(IconArrowUpCircle, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'artificial_intelligence':
            return h(IconArtificialIntelligence, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'backup_restore_cloud':
            return h(IconBackupRestoreCloud, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'backup_restore_file':
            return h(IconBackupRestoreFile, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'bar_graph':
            return h(IconBarGraph, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'bar_graph_line':
            return h(IconBarGraphLine, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'bar_graph_square':
            return h(IconBarGraphSquare, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'barcode':
            return h(IconBarcode, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'battery0_horizontal':
            return h(IconBattery0Horizontal, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'battery0_vertical':
            return h(IconBattery0Vertical, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'battery25_horizontal':
            return h(IconBattery25Horizontal, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'battery25_vertical':
            return h(IconBattery25Vertical, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'battery50_horizontal':
            return h(IconBattery50Horizontal, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'battery50_vertical':
            return h(IconBattery50Vertical, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'battery75_horizontal':
            return h(IconBattery75Horizontal, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'battery75_vertical':
            return h(IconBattery75Vertical, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'battery_charging_horizontal':
            return h(IconBatteryChargingHorizontal, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'battery_charging_vertical':
            return h(IconBatteryChargingVertical, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'battery_full_horizontal':
            return h(IconBatteryFullHorizontal, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'battery_full_vertical':
            return h(IconBatteryFullVertical, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'between':
            return h(IconBetween, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'bolt':
            return h(IconBolt, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'bookings':
            return h(IconBookings, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'bookings_open':
            return h(IconBookingsOpen, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'box_select':
            return h(IconBoxSelect, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'briefcase':
            return h(IconBriefcase, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'brightness':
            return h(IconBrightness, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'brush':
            return h(IconBrush, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'bug':
            return h(IconBug, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'bug_report':
            return h(IconBugReport, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'building_corporate':
            return h(IconBuildingCorporate, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'buildings':
            return h(IconBuildings, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'calculate':
            return h(IconCalculate, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'calculator':
            return h(IconCalculator, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'calculator_symbols':
            return h(IconCalculatorSymbols, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'calendar':
            return h(IconCalendar, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'calendar_add':
            return h(IconCalendarAdd, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'calendar_and_key':
            return h(IconCalendarAndKey, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'calendar_blank':
            return h(IconCalendarBlank, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'calendar_booking':
            return h(IconCalendarBooking, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'calendar_cancel':
            return h(IconCalendarCancel, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'calendar_check':
            return h(IconCalendarCheck, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'calendar_clock':
            return h(IconCalendarClock, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'calendar_event':
            return h(IconCalendarEvent, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'calendar_loading_unloading':
            return h(IconCalendarLoadingUnloading, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'calendar_loading_unloading_date':
            return h(IconCalendarLoadingUnloadingDate, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'calendar_plus':
            return h(IconCalendarPlus, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'calendar_rebook':
            return h(IconCalendarRebook, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'calendar_reserve':
            return h(IconCalendarReserve, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'calendar_show':
            return h(IconCalendarShow, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'calendar_time_slot':
            return h(IconCalendarTimeSlot, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'calendar_week':
            return h(IconCalendarWeek, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'camera':
            return h(IconCamera, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'camera_disabled':
            return h(IconCameraDisabled, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'cancel_circle':
            return h(IconCancelCircle, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'cancel_square':
            return h(IconCancelSquare, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'cancel_square_outlined':
            return h(IconCancelSquareOutlined, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'caret_down':
            return h(IconCaretDown, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'caret_down_bold':
            return h(IconCaretDownBold, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'caret_left':
            return h(IconCaretLeft, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'caret_left_bold':
            return h(IconCaretLeftBold, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'caret_right':
            return h(IconCaretRight, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'caret_right_bold':
            return h(IconCaretRightBold, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'caret_up':
            return h(IconCaretUp, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'caret_up_bold':
            return h(IconCaretUpBold, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'cell_merge':
            return h(IconCellMerge, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'cell_properties':
            return h(IconCellProperties, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'cell_split':
            return h(IconCellSplit, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'certificate':
            return h(IconCertificate, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'chat':
            return h(IconChat, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'check':
            return h(IconCheck, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'check_bold':
            return h(IconCheckBold, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'check_circle':
            return h(IconCheckCircle, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'check_circle_outlined':
            return h(IconCheckCircleOutlined, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'check_heavy':
            return h(IconCheckHeavy, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'chevron_double_down':
            return h(IconChevronDoubleDown, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'chevron_double_left':
            return h(IconChevronDoubleLeft, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'chevron_double_right':
            return h(IconChevronDoubleRight, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'chevron_double_up':
            return h(IconChevronDoubleUp, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'chevron_left':
            return h(IconChevronLeft, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'chevron_left_bold':
            return h(IconChevronLeftBold, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'chevron_right':
            return h(IconChevronRight, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'chevron_right_bold':
            return h(IconChevronRightBold, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'circle_notch':
            return h(IconCircleNotch, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'circle_outline':
            return h(IconCircleOutline, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'clipboard':
            return h(IconClipboard, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'clipboard_actions':
            return h(IconClipboardActions, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'clipboard_check':
            return h(IconClipboardCheck, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'clipboard_empty':
            return h(IconClipboardEmpty, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'clipboard_planning':
            return h(IconClipboardPlanning, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'clock':
            return h(IconClock, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'clock_add':
            return h(IconClockAdd, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'clock_locked':
            return h(IconClockLocked, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'close':
            return h(IconClose, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'close_bold':
            return h(IconCloseBold, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'close_heavy':
            return h(IconCloseHeavy, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'cloud':
            return h(IconCloud, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'cloud_connected':
            return h(IconCloudConnected, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'cloud_disconnected':
            return h(IconCloudDisconnected, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'cloud_download':
            return h(IconCloudDownload, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'cloud_upload':
            return h(IconCloudUpload, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'code':
            return h(IconCode, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'collapse':
            return h(IconCollapse, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'collapse_bold':
            return h(IconCollapseBold, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'color_picker':
            return h(IconColorPicker, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'column_copy':
            return h(IconColumnCopy, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'column_cut':
            return h(IconColumnCut, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'column_delete':
            return h(IconColumnDelete, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'column_insert_after':
            return h(IconColumnInsertAfter, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'column_insert_before':
            return h(IconColumnInsertBefore, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'column_paste_after':
            return h(IconColumnPasteAfter, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'column_paste_before':
            return h(IconColumnPasteBefore, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'column_properties':
            return h(IconColumnProperties, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'columns':
            return h(IconColumns, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'combine':
            return h(IconCombine, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'comment':
            return h(IconComment, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'compare_arrows':
            return h(IconCompareArrows, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'compass':
            return h(IconCompass, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'component':
            return h(IconComponent, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'contacts':
            return h(IconContacts, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'contrast':
            return h(IconContrast, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'copy_content':
            return h(IconCopyContent, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'credit_card':
            return h(IconCreditCard, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'crop':
            return h(IconCrop, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'cube':
            return h(IconCube, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'cursor':
            return h(IconCursor, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'cursor_add':
            return h(IconCursorAdd, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'cursor_remove':
            return h(IconCursorRemove, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'dashboard':
            return h(IconDashboard, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'day_mostly_cloudy':
            return h(IconDayMostlyCloudy, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'day_partly_cloudy':
            return h(IconDayPartlyCloudy, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'delete':
            return h(IconDelete, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'delivery_truck':
            return h(IconDeliveryTruck, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'delivery_truck_allocate':
            return h(IconDeliveryTruckAllocate, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'delivery_truck_motion':
            return h(IconDeliveryTruckMotion, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'download':
            return h(IconDownload, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'download_line':
            return h(IconDownloadLine, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'download_xls':
            return h(IconDownloadXls, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'drag_corner':
            return h(IconDragCorner, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'drag_horizontal':
            return h(IconDragHorizontal, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'drag_indicator':
            return h(IconDragIndicator, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'drag_vertical':
            return h(IconDragVertical, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'drivers':
            return h(IconDrivers, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'drizzle':
            return h(IconDrizzle, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'drone':
            return h(IconDrone, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'earnings_statement':
            return h(IconEarningsStatement, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'email':
            return h(IconEmail, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'envelope':
            return h(IconEnvelope, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'eraser':
            return h(IconEraser, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'exclamation_mark':
            return h(IconExclamationMark, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'expand':
            return h(IconExpand, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'expand_bold':
            return h(IconExpandBold, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'expand_less':
            return h(IconExpandLess, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'expand_less_bold':
            return h(IconExpandLessBold, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'expand_less_circle':
            return h(IconExpandLessCircle, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'expand_more':
            return h(IconExpandMore, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'expand_more_bold':
            return h(IconExpandMoreBold, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'expand_more_circle':
            return h(IconExpandMoreCircle, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'export':
            return h(IconExport, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'factory':
            return h(IconFactory, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'fast_forward':
            return h(IconFastForward, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'fast_rewind':
            return h(IconFastRewind, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'file':
            return h(IconFile, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'file_bar_graph':
            return h(IconFileBarGraph, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'file_check_in':
            return h(IconFileCheckIn, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'file_check_out':
            return h(IconFileCheckOut, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'file_cloud':
            return h(IconFileCloud, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'file_copy':
            return h(IconFileCopy, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'file_edit':
            return h(IconFileEdit, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'file_merge':
            return h(IconFileMerge, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'file_missing':
            return h(IconFileMissing, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'file_new':
            return h(IconFileNew, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'file_secure':
            return h(IconFileSecure, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'file_table':
            return h(IconFileTable, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'file_type_bmpf':
            return h(IconFileTypeBmpf, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'file_type_csv':
            return h(IconFileTypeCsv, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'file_type_cur':
            return h(IconFileTypeCur, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'file_type_doc':
            return h(IconFileTypeDoc, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'file_type_ico':
            return h(IconFileTypeIco, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'file_type_key':
            return h(IconFileTypeKey, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'file_type_log':
            return h(IconFileTypeLog, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'file_type_numbers':
            return h(IconFileTypeNumbers, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'file_type_pdf':
            return h(IconFileTypePdf, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'file_type_rfi':
            return h(IconFileTypeRfi, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'file_type_rfq':
            return h(IconFileTypeRfq, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'file_type_rtf':
            return h(IconFileTypeRtf, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'file_type_text':
            return h(IconFileTypeText, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'file_type_tif':
            return h(IconFileTypeTif, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'file_type_tmp':
            return h(IconFileTypeTmp, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'file_type_xls':
            return h(IconFileTypeXls, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'filter':
            return h(IconFilter, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'filter_list':
            return h(IconFilterList, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'filter_off':
            return h(IconFilterOff, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'flag':
            return h(IconFlag, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'flag_finish':
            return h(IconFlagFinish, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'floorplan':
            return h(IconFloorplan, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'flowchart':
            return h(IconFlowchart, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'fog':
            return h(IconFog, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'folder_closed':
            return h(IconFolderClosed, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'folder_locked':
            return h(IconFolderLocked, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'folder_new':
            return h(IconFolderNew, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'folder_open':
            return h(IconFolderOpen, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'folder_personal':
            return h(IconFolderPersonal, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'folder_project':
            return h(IconFolderProject, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'folder_public':
            return h(IconFolderPublic, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'folder_share':
            return h(IconFolderShare, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'folder_unlocked':
            return h(IconFolderUnlocked, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'footprints':
            return h(IconFootprints, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'frame':
            return h(IconFrame, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'freight_market':
            return h(IconFreightMarket, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'freight_matching':
            return h(IconFreightMatching, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'freight_trolley':
            return h(IconFreightTrolley, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'full_screen':
            return h(IconFullScreen, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'gantt_chart':
            return h(IconGanttChart, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'gavel':
            return h(IconGavel, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'gears':
            return h(IconGears, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'greater_than_equal_to':
            return h(IconGreaterThanEqualTo, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'group_items':
            return h(IconGroupItems, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'hail':
            return h(IconHail, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'hail_heavy':
            return h(IconHailHeavy, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'hail_light':
            return h(IconHailLight, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'hammer':
            return h(IconHammer, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'hand':
            return h(IconHand, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'hard_hat':
            return h(IconHardHat, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'headset':
            return h(IconHeadset, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'heart':
            return h(IconHeart, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'helicopter':
            return h(IconHelicopter, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'help':
            return h(IconHelp, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'help_outlined':
            return h(IconHelpOutlined, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'history':
            return h(IconHistory, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'home':
            return h(IconHome, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'hourglass':
            return h(IconHourglass, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'ice':
            return h(IconIce, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'image':
            return h(IconImage, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'image_scene':
            return h(IconImageScene, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'in_cab_device':
            return h(IconInCabDevice, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'in_field_device':
            return h(IconInFieldDevice, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'info':
            return h(IconInfo, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'info_outlined':
            return h(IconInfoOutlined, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'info_token':
            return h(IconInfoToken, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'inspect':
            return h(IconInspect, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'invoice':
            return h(IconInvoice, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'item_begins_with':
            return h(IconItemBeginsWith, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'item_contains':
            return h(IconItemContains, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'item_does_not_contain':
            return h(IconItemDoesNotContain, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'item_does_not_equal':
            return h(IconItemDoesNotEqual, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'item_ends_with':
            return h(IconItemEndsWith, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'item_equals':
            return h(IconItemEquals, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'key':
            return h(IconKey, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'keyboard':
            return h(IconKeyboard, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'keyboard_keys':
            return h(IconKeyboardKeys, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'labs':
            return h(IconLabs, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'language':
            return h(IconLanguage, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'launch':
            return h(IconLaunch, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'launch_bold':
            return h(IconLaunchBold, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'layer':
            return h(IconLayer, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'learn':
            return h(IconLearn, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'less_than_equal_to':
            return h(IconLessThanEqualTo, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'lightbulb_off':
            return h(IconLightbulbOff, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'lightbulb_on':
            return h(IconLightbulbOn, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'lightning':
            return h(IconLightning, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'line_diagonal':
            return h(IconLineDiagonal, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'line_graph':
            return h(IconLineGraph, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'link':
            return h(IconLink, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'link_broken':
            return h(IconLinkBroken, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'link_off':
            return h(IconLinkOff, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'list_bulleted':
            return h(IconListBulleted, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'list_numbered':
            return h(IconListNumbered, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'location':
            return h(IconLocation, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'location_point':
            return h(IconLocationPoint, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'lock':
            return h(IconLock, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'lock_open':
            return h(IconLockOpen, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'magic_wand':
            return h(IconMagicWand, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'manage_accounts':
            return h(IconManageAccounts, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'manage_people':
            return h(IconManagePeople, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'map':
            return h(IconMap, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'map2d':
            return h(IconMap2d, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'map_marker':
            return h(IconMapMarker, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'map_markers':
            return h(IconMapMarkers, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'map_poi':
            return h(IconMapPoi, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'master_data':
            return h(IconMasterData, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'megaphone':
            return h(IconMegaphone, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'menu':
            return h(IconMenu, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'menu_circle':
            return h(IconMenuCircle, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'mic':
            return h(IconMic, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'mix':
            return h(IconMix, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'monetarization':
            return h(IconMonetarization, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'moon':
            return h(IconMoon, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'more_circle':
            return h(IconMoreCircle, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'more_horizontal':
            return h(IconMoreHorizontal, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'more_vertical':
            return h(IconMoreVertical, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'mouse':
            return h(IconMouse, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'move':
            return h(IconMove, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'move_last_down':
            return h(IconMoveLastDown, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'move_last_left':
            return h(IconMoveLastLeft, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'move_last_right':
            return h(IconMoveLastRight, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'move_last_up':
            return h(IconMoveLastUp, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'night_mostly_cloudy':
            return h(IconNightMostlyCloudy, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'night_partly_cloudy':
            return h(IconNightPartlyCloudy, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'not_synced_bold':
            return h(IconNotSyncedBold, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'notifications':
            return h(IconNotifications, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'notifications_off':
            return h(IconNotificationsOff, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'object_mirror':
            return h(IconObjectMirror, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'object_outline':
            return h(IconObjectOutline, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'object_rotate':
            return h(IconObjectRotate, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'offers':
            return h(IconOffers, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'overcast':
            return h(IconOvercast, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'package':
            return h(IconPackage, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'package_delivered':
            return h(IconPackageDelivered, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'package_delivery':
            return h(IconPackageDelivery, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'package_missing':
            return h(IconPackageMissing, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'package_pickup':
            return h(IconPackagePickup, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'package_sent':
            return h(IconPackageSent, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'paint_bucket':
            return h(IconPaintBucket, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'palette':
            return h(IconPalette, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'pan':
            return h(IconPan, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'paperclip':
            return h(IconPaperclip, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'password':
            return h(IconPassword, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'pause_circle':
            return h(IconPauseCircle, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'payment_instant':
            return h(IconPaymentInstant, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'pen':
            return h(IconPen, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'pencil':
            return h(IconPencil, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'people_add':
            return h(IconPeopleAdd, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'people_couple':
            return h(IconPeopleCouple, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'people_group':
            return h(IconPeopleGroup, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'person':
            return h(IconPerson, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'person_account':
            return h(IconPersonAccount, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'person_add':
            return h(IconPersonAdd, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'person_clock':
            return h(IconPersonClock, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'person_edit':
            return h(IconPersonEdit, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'person_remove':
            return h(IconPersonRemove, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'phone':
            return h(IconPhone, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'phone_call':
            return h(IconPhoneCall, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'phone_hang_up':
            return h(IconPhoneHangUp, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'phone_mobile':
            return h(IconPhoneMobile, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'pin':
            return h(IconPin, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'pin_add':
            return h(IconPinAdd, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'pin_straight':
            return h(IconPinStraight, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'pin_straight_cancel':
            return h(IconPinStraightCancel, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'play_circle':
            return h(IconPlayCircle, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'point_marker_tool':
            return h(IconPointMarkerTool, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'polygon':
            return h(IconPolygon, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'polygon_area_tool':
            return h(IconPolygonAreaTool, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'polygon_concave':
            return h(IconPolygonConcave, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'polygon_cone':
            return h(IconPolygonCone, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'polygon_drag_rectangle':
            return h(IconPolygonDragRectangle, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'polygon_line_tool':
            return h(IconPolygonLineTool, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'polygon_merge':
            return h(IconPolygonMerge, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'polygon_select':
            return h(IconPolygonSelect, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'printer':
            return h(IconPrinter, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'pulse':
            return h(IconPulse, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'qr_code':
            return h(IconQrCode, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'question':
            return h(IconQuestion, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'quick_login':
            return h(IconQuickLogin, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'rain':
            return h(IconRain, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'rain_heavy':
            return h(IconRainHeavy, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'rain_icy':
            return h(IconRainIcy, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'raindrop':
            return h(IconRaindrop, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'redo':
            return h(IconRedo, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'redo_bold':
            return h(IconRedoBold, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'refresh':
            return h(IconRefresh, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'refresh_bold':
            return h(IconRefreshBold, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'remove':
            return h(IconRemove, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'remove_bold':
            return h(IconRemoveBold, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'remove_circle':
            return h(IconRemoveCircle, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'remove_heavy':
            return h(IconRemoveHeavy, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'reply':
            return h(IconReply, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'row_add':
            return h(IconRowAdd, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'row_copy':
            return h(IconRowCopy, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'row_cut':
            return h(IconRowCut, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'row_delete':
            return h(IconRowDelete, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'row_highlighted':
            return h(IconRowHighlighted, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'row_insert_after':
            return h(IconRowInsertAfter, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'row_insert_before':
            return h(IconRowInsertBefore, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'row_paste_after':
            return h(IconRowPasteAfter, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'row_paste_before':
            return h(IconRowPasteBefore, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'row_properties':
            return h(IconRowProperties, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'rows_show_less':
            return h(IconRowsShowLess, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'rows_show_more':
            return h(IconRowsShowMore, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'rss_feed':
            return h(IconRssFeed, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'ruler':
            return h(IconRuler, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'satellite':
            return h(IconSatellite, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'save_as':
            return h(IconSaveAs, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'save_disk':
            return h(IconSaveDisk, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'scan_barcode':
            return h(IconScanBarcode, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'schema':
            return h(IconSchema, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'scissors':
            return h(IconScissors, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'screen':
            return h(IconScreen, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'screenshot':
            return h(IconScreenshot, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'search':
            return h(IconSearch, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'server':
            return h(IconServer, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'server_round':
            return h(IconServerRound, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'settings':
            return h(IconSettings, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'share':
            return h(IconShare, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'shield':
            return h(IconShield, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'shopping_cart':
            return h(IconShoppingCart, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'shopping_cart_minus':
            return h(IconShoppingCartMinus, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'shopping_cart_plus':
            return h(IconShoppingCartPlus, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'shortcut':
            return h(IconShortcut, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'shovel':
            return h(IconShovel, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'sign_in':
            return h(IconSignIn, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'sign_out':
            return h(IconSignOut, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'signal':
            return h(IconSignal, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'smiley_dissatisfied':
            return h(IconSmileyDissatisfied, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'smiley_dissatisfied_outlined':
            return h(IconSmileyDissatisfiedOutlined, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'smiley_neutral':
            return h(IconSmileyNeutral, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'smiley_neutral_outlined':
            return h(IconSmileyNeutralOutlined, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'smiley_satisfied':
            return h(IconSmileySatisfied, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'smiley_satisfied_outlined':
            return h(IconSmileySatisfiedOutlined, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'smiley_somewhat_dissatisfied':
            return h(IconSmileySomewhatDissatisfied, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'smiley_somewhat_dissatisfied_outlined':
            return h(IconSmileySomewhatDissatisfiedOutlined, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'smiley_somewhat_satisfied':
            return h(IconSmileySomewhatSatisfied, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'smiley_somewhat_satisfied_outlined':
            return h(IconSmileySomewhatSatisfiedOutlined, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'snow_heavy':
            return h(IconSnowHeavy, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'snow_light':
            return h(IconSnowLight, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'snow_particle':
            return h(IconSnowParticle, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'snowflake':
            return h(IconSnowflake, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'snowflakes':
            return h(IconSnowflakes, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'sort':
            return h(IconSort, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'sort_alpha_down':
            return h(IconSortAlphaDown, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'sort_alpha_up':
            return h(IconSortAlphaUp, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'sort_arrow_down':
            return h(IconSortArrowDown, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'sort_arrow_up':
            return h(IconSortArrowUp, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'sort_down':
            return h(IconSortDown, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'sort_up':
            return h(IconSortUp, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'star':
            return h(IconStar, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'star_half':
            return h(IconStarHalf, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'star_locked':
            return h(IconStarLocked, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'star_northern':
            return h(IconStarNorthern, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'star_outlined':
            return h(IconStarOutlined, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'stars':
            return h(IconStars, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'stop_circle':
            return h(IconStopCircle, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'street_measurement':
            return h(IconStreetMeasurement, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'submit_expense':
            return h(IconSubmitExpense, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'sun':
            return h(IconSun, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'swap':
            return h(IconSwap, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'switch_account':
            return h(IconSwitchAccount, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'switch_left':
            return h(IconSwitchLeft, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'switch_right':
            return h(IconSwitchRight, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'sync':
            return h(IconSync, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'sync_bold':
            return h(IconSyncBold, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'sync_off':
            return h(IconSyncOff, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'table':
            return h(IconTable, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'tablet':
            return h(IconTablet, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'text_align_left':
            return h(IconTextAlignLeft, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'text_align_right':
            return h(IconTextAlignRight, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'text_bold':
            return h(IconTextBold, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'text_centered':
            return h(IconTextCentered, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'text_grow':
            return h(IconTextGrow, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'text_input':
            return h(IconTextInput, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'text_input_long':
            return h(IconTextInputLong, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'text_input_short':
            return h(IconTextInputShort, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'text_italic':
            return h(IconTextItalic, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'text_marker':
            return h(IconTextMarker, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'text_shrink':
            return h(IconTextShrink, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'text_strikethrough':
            return h(IconTextStrikethrough, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'text_truncated':
            return h(IconTextTruncated, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'text_underlined':
            return h(IconTextUnderlined, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'thermometer_cold':
            return h(IconThermometerCold, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'thermometer_hot':
            return h(IconThermometerHot, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'thumbs_down':
            return h(IconThumbsDown, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'thumbs_up':
            return h(IconThumbsUp, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'thunderstorm_heavy':
            return h(IconThunderstormHeavy, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'thunderstorm_light':
            return h(IconThunderstormLight, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'ticket':
            return h(IconTicket, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'ticket_plane':
            return h(IconTicketPlane, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'time_off_work':
            return h(IconTimeOffWork, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'time_slot_not_reserved':
            return h(IconTimeSlotNotReserved, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'time_slot_reserved':
            return h(IconTimeSlotReserved, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'timer':
            return h(IconTimer, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'timer_countdown':
            return h(IconTimerCountdown, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'timesheet':
            return h(IconTimesheet, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'timesheet_approve':
            return h(IconTimesheetApprove, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'toggle_center':
            return h(IconToggleCenter, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'toggle_left_panel':
            return h(IconToggleLeftPanel, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'toggle_off':
            return h(IconToggleOff, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'toggle_on':
            return h(IconToggleOn, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'toggle_right_panel':
            return h(IconToggleRightPanel, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'traffic_cone':
            return h(IconTrafficCone, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'tree_structure':
            return h(IconTreeStructure, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'triangle_down':
            return h(IconTriangleDown, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'triangle_left':
            return h(IconTriangleLeft, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'triangle_right':
            return h(IconTriangleRight, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'triangle_up':
            return h(IconTriangleUp, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'trimble_logo':
            return h(IconTrimbleLogo, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'tune':
            return h(IconTune, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'tune_circle':
            return h(IconTuneCircle, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'uncombine':
            return h(IconUncombine, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'undo':
            return h(IconUndo, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'undo_bold':
            return h(IconUndoBold, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'unfold_less':
            return h(IconUnfoldLess, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'unfold_more':
            return h(IconUnfoldMore, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'unsorted_arrows':
            return h(IconUnsortedArrows, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'update':
            return h(IconUpdate, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'upload':
            return h(IconUpload, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'upload_xls':
            return h(IconUploadXls, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'user_account':
            return h(IconUserAccount, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'user_active':
            return h(IconUserActive, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'user_guide':
            return h(IconUserGuide, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'user_inactive':
            return h(IconUserInactive, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'user_passkey':
            return h(IconUserPasskey, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'user_permissions':
            return h(IconUserPermissions, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'video':
            return h(IconVideo, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'video_add':
            return h(IconVideoAdd, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'video_disabled':
            return h(IconVideoDisabled, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'view_grid':
            return h(IconViewGrid, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'view_list':
            return h(IconViewList, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'visibility_off':
            return h(IconVisibilityOff, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'visibility_on':
            return h(IconVisibilityOn, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'volume_down':
            return h(IconVolumeDown, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'volume_mute':
            return h(IconVolumeMute, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'volume_up':
            return h(IconVolumeUp, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'vr_xr':
            return h(IconVrXr, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'warning':
            return h(IconWarning, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'warning_outlined':
            return h(IconWarningOutlined, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'web':
            return h(IconWeb, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'wheelbarrow':
            return h(IconWheelbarrow, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'widgets':
            return h(IconWidgets, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'wifi':
            return h(IconWifi, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'wifi_no_internet':
            return h(IconWifiNoInternet, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'wifi_off':
            return h(IconWifiOff, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'wind':
            return h(IconWind, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'window':
            return h(IconWindow, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'window_dock_undock':
            return h(IconWindowDockUndock, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'window_fit':
            return h(IconWindowFit, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'window_resize':
            return h(IconWindowResize, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'window_side_panel':
            return h(IconWindowSidePanel, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'window_template':
            return h(IconWindowTemplate, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'window_views':
            return h(IconWindowViews, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'window_wireframe':
            return h(IconWindowWireframe, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'wintery_mix':
            return h(IconWinteryMix, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'wrench':
            return h(IconWrench, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'zoom_box':
            return h(IconZoomBox, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'zoom_in':
            return h(IconZoomIn, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        case 'zoom_out':
            return h(IconZoomOut, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
        default:
            return h("img", Object.assign({ src: props.icon }, (props.imageOptions || {})));
    }
};
